
final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000176e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001a4  00800060  0000176e  00001802  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000083  00800204  00800204  000019a6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000019a6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000019d8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c0  00000000  00000000  00001a14  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002183  00000000  00000000  00001ad4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000800  00000000  00000000  00003c57  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000e2c  00000000  00000000  00004457  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c4  00000000  00000000  00005284  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004ce  00000000  00000000  00005448  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e45  00000000  00000000  00005916  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  0000675b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__stack+0x14f>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__FUSE_REGION_LENGTH__+0x3a>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <valve2+0x16>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <keyfind+0xdc>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <LCD_Command+0x24>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	12 e0       	ldi	r17, 0x02	; 2
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ee e6       	ldi	r30, 0x6E	; 110
     162:	f7 e1       	ldi	r31, 0x17	; 23
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	a4 30       	cpi	r26, 0x04	; 4
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	22 e0       	ldi	r18, 0x02	; 2
     172:	a4 e0       	ldi	r26, 0x04	; 4
     174:	b2 e0       	ldi	r27, 0x02	; 2
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a7 38       	cpi	r26, 0x87	; 135
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 20 04 	call	0x840	; 0x840 <main>
     184:	0c 94 b5 0b 	jmp	0x176a	; 0x176a <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <ADC_Init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18c:	8a b3       	in	r24, 0x1a	; 26
     18e:	8a bb       	out	0x1a, r24	; 26
     190:	87 e8       	ldi	r24, 0x87	; 135
     192:	86 b9       	out	0x06, r24	; 6
     194:	08 95       	ret

00000196 <LCD_Command>:
     196:	98 b3       	in	r25, 0x18	; 24
     198:	9f 70       	andi	r25, 0x0F	; 15
     19a:	28 2f       	mov	r18, r24
     19c:	20 7f       	andi	r18, 0xF0	; 240
     19e:	92 2b       	or	r25, r18
     1a0:	98 bb       	out	0x18, r25	; 24
     1a2:	98 b3       	in	r25, 0x18	; 24
     1a4:	9e 7f       	andi	r25, 0xFE	; 254
     1a6:	98 bb       	out	0x18, r25	; 24
     1a8:	98 b3       	in	r25, 0x18	; 24
     1aa:	92 60       	ori	r25, 0x02	; 2
     1ac:	98 bb       	out	0x18, r25	; 24
     1ae:	32 e0       	ldi	r19, 0x02	; 2
     1b0:	3a 95       	dec	r19
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <LCD_Command+0x1a>
     1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <LCD_Command+0x20>
     1b6:	98 b3       	in	r25, 0x18	; 24
     1b8:	9d 7f       	andi	r25, 0xFD	; 253
     1ba:	98 bb       	out	0x18, r25	; 24
     1bc:	ef e8       	ldi	r30, 0x8F	; 143
     1be:	f1 e0       	ldi	r31, 0x01	; 1
     1c0:	31 97       	sbiw	r30, 0x01	; 1
     1c2:	f1 f7       	brne	.-4      	; 0x1c0 <LCD_Command+0x2a>
     1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <LCD_Command+0x30>
     1c6:	00 00       	nop
     1c8:	28 b3       	in	r18, 0x18	; 24
     1ca:	f0 e1       	ldi	r31, 0x10	; 16
     1cc:	8f 9f       	mul	r24, r31
     1ce:	c0 01       	movw	r24, r0
     1d0:	11 24       	eor	r1, r1
     1d2:	92 2f       	mov	r25, r18
     1d4:	9f 70       	andi	r25, 0x0F	; 15
     1d6:	89 2b       	or	r24, r25
     1d8:	88 bb       	out	0x18, r24	; 24
     1da:	88 b3       	in	r24, 0x18	; 24
     1dc:	82 60       	ori	r24, 0x02	; 2
     1de:	88 bb       	out	0x18, r24	; 24
     1e0:	32 e0       	ldi	r19, 0x02	; 2
     1e2:	3a 95       	dec	r19
     1e4:	f1 f7       	brne	.-4      	; 0x1e2 <LCD_Command+0x4c>
     1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <LCD_Command+0x52>
     1e8:	88 b3       	in	r24, 0x18	; 24
     1ea:	8d 7f       	andi	r24, 0xFD	; 253
     1ec:	88 bb       	out	0x18, r24	; 24
     1ee:	8f e9       	ldi	r24, 0x9F	; 159
     1f0:	9f e0       	ldi	r25, 0x0F	; 15
     1f2:	01 97       	sbiw	r24, 0x01	; 1
     1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LCD_Command+0x5c>
     1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <LCD_Command+0x62>
     1f8:	00 00       	nop
     1fa:	08 95       	ret

000001fc <LCD_Char>:
     1fc:	98 b3       	in	r25, 0x18	; 24
     1fe:	9f 70       	andi	r25, 0x0F	; 15
     200:	28 2f       	mov	r18, r24
     202:	20 7f       	andi	r18, 0xF0	; 240
     204:	92 2b       	or	r25, r18
     206:	98 bb       	out	0x18, r25	; 24
     208:	98 b3       	in	r25, 0x18	; 24
     20a:	91 60       	ori	r25, 0x01	; 1
     20c:	98 bb       	out	0x18, r25	; 24
     20e:	98 b3       	in	r25, 0x18	; 24
     210:	92 60       	ori	r25, 0x02	; 2
     212:	98 bb       	out	0x18, r25	; 24
     214:	32 e0       	ldi	r19, 0x02	; 2
     216:	3a 95       	dec	r19
     218:	f1 f7       	brne	.-4      	; 0x216 <LCD_Char+0x1a>
     21a:	00 c0       	rjmp	.+0      	; 0x21c <LCD_Char+0x20>
     21c:	98 b3       	in	r25, 0x18	; 24
     21e:	9d 7f       	andi	r25, 0xFD	; 253
     220:	98 bb       	out	0x18, r25	; 24
     222:	ef e8       	ldi	r30, 0x8F	; 143
     224:	f1 e0       	ldi	r31, 0x01	; 1
     226:	31 97       	sbiw	r30, 0x01	; 1
     228:	f1 f7       	brne	.-4      	; 0x226 <LCD_Char+0x2a>
     22a:	00 c0       	rjmp	.+0      	; 0x22c <LCD_Char+0x30>
     22c:	00 00       	nop
     22e:	28 b3       	in	r18, 0x18	; 24
     230:	f0 e1       	ldi	r31, 0x10	; 16
     232:	8f 9f       	mul	r24, r31
     234:	c0 01       	movw	r24, r0
     236:	11 24       	eor	r1, r1
     238:	92 2f       	mov	r25, r18
     23a:	9f 70       	andi	r25, 0x0F	; 15
     23c:	89 2b       	or	r24, r25
     23e:	88 bb       	out	0x18, r24	; 24
     240:	88 b3       	in	r24, 0x18	; 24
     242:	82 60       	ori	r24, 0x02	; 2
     244:	88 bb       	out	0x18, r24	; 24
     246:	32 e0       	ldi	r19, 0x02	; 2
     248:	3a 95       	dec	r19
     24a:	f1 f7       	brne	.-4      	; 0x248 <LCD_Char+0x4c>
     24c:	00 c0       	rjmp	.+0      	; 0x24e <LCD_Char+0x52>
     24e:	88 b3       	in	r24, 0x18	; 24
     250:	8d 7f       	andi	r24, 0xFD	; 253
     252:	88 bb       	out	0x18, r24	; 24
     254:	8f e9       	ldi	r24, 0x9F	; 159
     256:	9f e0       	ldi	r25, 0x0F	; 15
     258:	01 97       	sbiw	r24, 0x01	; 1
     25a:	f1 f7       	brne	.-4      	; 0x258 <LCD_Char+0x5c>
     25c:	00 c0       	rjmp	.+0      	; 0x25e <LCD_Char+0x62>
     25e:	00 00       	nop
     260:	08 95       	ret

00000262 <LCD_Init>:
     262:	8f ef       	ldi	r24, 0xFF	; 255
     264:	87 bb       	out	0x17, r24	; 23
     266:	8f e3       	ldi	r24, 0x3F	; 63
     268:	9c e9       	ldi	r25, 0x9C	; 156
     26a:	01 97       	sbiw	r24, 0x01	; 1
     26c:	f1 f7       	brne	.-4      	; 0x26a <LCD_Init+0x8>
     26e:	00 c0       	rjmp	.+0      	; 0x270 <LCD_Init+0xe>
     270:	00 00       	nop
     272:	83 e3       	ldi	r24, 0x33	; 51
     274:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     278:	82 e3       	ldi	r24, 0x32	; 50
     27a:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     27e:	88 e2       	ldi	r24, 0x28	; 40
     280:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     284:	8c e0       	ldi	r24, 0x0C	; 12
     286:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     28a:	86 e0       	ldi	r24, 0x06	; 6
     28c:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     290:	81 e0       	ldi	r24, 0x01	; 1
     292:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     296:	8f e9       	ldi	r24, 0x9F	; 159
     298:	9f e0       	ldi	r25, 0x0F	; 15
     29a:	01 97       	sbiw	r24, 0x01	; 1
     29c:	f1 f7       	brne	.-4      	; 0x29a <LCD_Init+0x38>
     29e:	00 c0       	rjmp	.+0      	; 0x2a0 <LCD_Init+0x3e>
     2a0:	00 00       	nop
     2a2:	80 e8       	ldi	r24, 0x80	; 128
     2a4:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     2a8:	08 95       	ret

000002aa <LCD_String>:
     2aa:	0f 93       	push	r16
     2ac:	1f 93       	push	r17
     2ae:	cf 93       	push	r28
     2b0:	df 93       	push	r29
     2b2:	8c 01       	movw	r16, r24
     2b4:	c0 e0       	ldi	r28, 0x00	; 0
     2b6:	d0 e0       	ldi	r29, 0x00	; 0
     2b8:	03 c0       	rjmp	.+6      	; 0x2c0 <LCD_String+0x16>
     2ba:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCD_Char>
     2be:	21 96       	adiw	r28, 0x01	; 1
     2c0:	f8 01       	movw	r30, r16
     2c2:	ec 0f       	add	r30, r28
     2c4:	fd 1f       	adc	r31, r29
     2c6:	80 81       	ld	r24, Z
     2c8:	81 11       	cpse	r24, r1
     2ca:	f7 cf       	rjmp	.-18     	; 0x2ba <LCD_String+0x10>
     2cc:	df 91       	pop	r29
     2ce:	cf 91       	pop	r28
     2d0:	1f 91       	pop	r17
     2d2:	0f 91       	pop	r16
     2d4:	08 95       	ret

000002d6 <LCD_Clear>:
     2d6:	81 e0       	ldi	r24, 0x01	; 1
     2d8:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     2dc:	8f e9       	ldi	r24, 0x9F	; 159
     2de:	9f e0       	ldi	r25, 0x0F	; 15
     2e0:	01 97       	sbiw	r24, 0x01	; 1
     2e2:	f1 f7       	brne	.-4      	; 0x2e0 <LCD_Clear+0xa>
     2e4:	00 c0       	rjmp	.+0      	; 0x2e6 <LCD_Clear+0x10>
     2e6:	00 00       	nop
     2e8:	80 e8       	ldi	r24, 0x80	; 128
     2ea:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
     2ee:	08 95       	ret

000002f0 <keyfind>:
     2f0:	80 ef       	ldi	r24, 0xF0	; 240
     2f2:	84 bb       	out	0x14, r24	; 20
     2f4:	8f ef       	ldi	r24, 0xFF	; 255
     2f6:	85 bb       	out	0x15, r24	; 21
     2f8:	85 b3       	in	r24, 0x15	; 21
     2fa:	8f 70       	andi	r24, 0x0F	; 15
     2fc:	85 bb       	out	0x15, r24	; 21
     2fe:	00 00       	nop
     300:	83 b3       	in	r24, 0x13	; 19
     302:	8f 70       	andi	r24, 0x0F	; 15
     304:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <colloc>
     308:	8f 30       	cpi	r24, 0x0F	; 15
     30a:	b1 f7       	brne	.-20     	; 0x2f8 <keyfind+0x8>
     30c:	8f e3       	ldi	r24, 0x3F	; 63
     30e:	9c e9       	ldi	r25, 0x9C	; 156
     310:	01 97       	sbiw	r24, 0x01	; 1
     312:	f1 f7       	brne	.-4      	; 0x310 <keyfind+0x20>
     314:	00 c0       	rjmp	.+0      	; 0x316 <keyfind+0x26>
     316:	00 00       	nop
     318:	83 b3       	in	r24, 0x13	; 19
     31a:	8f 70       	andi	r24, 0x0F	; 15
     31c:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <colloc>
     320:	8f 30       	cpi	r24, 0x0F	; 15
     322:	a1 f3       	breq	.-24     	; 0x30c <keyfind+0x1c>
     324:	9f ef       	ldi	r25, 0xFF	; 255
     326:	29 ef       	ldi	r18, 0xF9	; 249
     328:	80 e0       	ldi	r24, 0x00	; 0
     32a:	91 50       	subi	r25, 0x01	; 1
     32c:	20 40       	sbci	r18, 0x00	; 0
     32e:	80 40       	sbci	r24, 0x00	; 0
     330:	e1 f7       	brne	.-8      	; 0x32a <keyfind+0x3a>
     332:	00 c0       	rjmp	.+0      	; 0x334 <keyfind+0x44>
     334:	00 00       	nop
     336:	83 b3       	in	r24, 0x13	; 19
     338:	8f 70       	andi	r24, 0x0F	; 15
     33a:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <colloc>
     33e:	8f 30       	cpi	r24, 0x0F	; 15
     340:	29 f3       	breq	.-54     	; 0x30c <keyfind+0x1c>
     342:	8f ee       	ldi	r24, 0xEF	; 239
     344:	85 bb       	out	0x15, r24	; 21
     346:	00 00       	nop
     348:	83 b3       	in	r24, 0x13	; 19
     34a:	8f 70       	andi	r24, 0x0F	; 15
     34c:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <colloc>
     350:	8f 30       	cpi	r24, 0x0F	; 15
     352:	19 f0       	breq	.+6      	; 0x35a <keyfind+0x6a>
     354:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <rowloc>
     358:	27 c0       	rjmp	.+78     	; 0x3a8 <keyfind+0xb8>
     35a:	8f ed       	ldi	r24, 0xDF	; 223
     35c:	85 bb       	out	0x15, r24	; 21
     35e:	00 00       	nop
     360:	83 b3       	in	r24, 0x13	; 19
     362:	8f 70       	andi	r24, 0x0F	; 15
     364:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <colloc>
     368:	8f 30       	cpi	r24, 0x0F	; 15
     36a:	21 f0       	breq	.+8      	; 0x374 <keyfind+0x84>
     36c:	81 e0       	ldi	r24, 0x01	; 1
     36e:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rowloc>
     372:	1a c0       	rjmp	.+52     	; 0x3a8 <keyfind+0xb8>
     374:	8f eb       	ldi	r24, 0xBF	; 191
     376:	85 bb       	out	0x15, r24	; 21
     378:	00 00       	nop
     37a:	83 b3       	in	r24, 0x13	; 19
     37c:	8f 70       	andi	r24, 0x0F	; 15
     37e:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <colloc>
     382:	8f 30       	cpi	r24, 0x0F	; 15
     384:	21 f0       	breq	.+8      	; 0x38e <keyfind+0x9e>
     386:	82 e0       	ldi	r24, 0x02	; 2
     388:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rowloc>
     38c:	0d c0       	rjmp	.+26     	; 0x3a8 <keyfind+0xb8>
     38e:	8f e7       	ldi	r24, 0x7F	; 127
     390:	85 bb       	out	0x15, r24	; 21
     392:	00 00       	nop
     394:	83 b3       	in	r24, 0x13	; 19
     396:	8f 70       	andi	r24, 0x0F	; 15
     398:	80 93 15 02 	sts	0x0215, r24	; 0x800215 <colloc>
     39c:	8f 30       	cpi	r24, 0x0F	; 15
     39e:	09 f4       	brne	.+2      	; 0x3a2 <keyfind+0xb2>
     3a0:	a7 cf       	rjmp	.-178    	; 0x2f0 <keyfind>
     3a2:	83 e0       	ldi	r24, 0x03	; 3
     3a4:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rowloc>
     3a8:	80 91 15 02 	lds	r24, 0x0215	; 0x800215 <colloc>
     3ac:	8e 30       	cpi	r24, 0x0E	; 14
     3ae:	59 f4       	brne	.+22     	; 0x3c6 <keyfind+0xd6>
     3b0:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <rowloc>
     3b4:	f0 e0       	ldi	r31, 0x00	; 0
     3b6:	ee 0f       	add	r30, r30
     3b8:	ff 1f       	adc	r31, r31
     3ba:	ee 0f       	add	r30, r30
     3bc:	ff 1f       	adc	r31, r31
     3be:	e0 5a       	subi	r30, 0xA0	; 160
     3c0:	ff 4f       	sbci	r31, 0xFF	; 255
     3c2:	80 81       	ld	r24, Z
     3c4:	08 95       	ret
     3c6:	8d 30       	cpi	r24, 0x0D	; 13
     3c8:	59 f4       	brne	.+22     	; 0x3e0 <keyfind+0xf0>
     3ca:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <rowloc>
     3ce:	f0 e0       	ldi	r31, 0x00	; 0
     3d0:	ee 0f       	add	r30, r30
     3d2:	ff 1f       	adc	r31, r31
     3d4:	ee 0f       	add	r30, r30
     3d6:	ff 1f       	adc	r31, r31
     3d8:	e0 5a       	subi	r30, 0xA0	; 160
     3da:	ff 4f       	sbci	r31, 0xFF	; 255
     3dc:	81 81       	ldd	r24, Z+1	; 0x01
     3de:	08 95       	ret
     3e0:	8b 30       	cpi	r24, 0x0B	; 11
     3e2:	59 f4       	brne	.+22     	; 0x3fa <keyfind+0x10a>
     3e4:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <rowloc>
     3e8:	f0 e0       	ldi	r31, 0x00	; 0
     3ea:	ee 0f       	add	r30, r30
     3ec:	ff 1f       	adc	r31, r31
     3ee:	ee 0f       	add	r30, r30
     3f0:	ff 1f       	adc	r31, r31
     3f2:	e0 5a       	subi	r30, 0xA0	; 160
     3f4:	ff 4f       	sbci	r31, 0xFF	; 255
     3f6:	82 81       	ldd	r24, Z+2	; 0x02
     3f8:	08 95       	ret
     3fa:	e0 91 18 02 	lds	r30, 0x0218	; 0x800218 <rowloc>
     3fe:	f0 e0       	ldi	r31, 0x00	; 0
     400:	ee 0f       	add	r30, r30
     402:	ff 1f       	adc	r31, r31
     404:	ee 0f       	add	r30, r30
     406:	ff 1f       	adc	r31, r31
     408:	e0 5a       	subi	r30, 0xA0	; 160
     40a:	ff 4f       	sbci	r31, 0xFF	; 255
     40c:	83 81       	ldd	r24, Z+3	; 0x03
     40e:	08 95       	ret

00000410 <stepper_1_time>:
		}
		void stepper_1_time()
		{
			// All pins of PORTC as output                //Initially all pins as output high

			PORTA = 0b00010010;
     410:	82 e1       	ldi	r24, 0x12	; 18
     412:	8b bb       	out	0x1b, r24	; 27
     414:	2f ef       	ldi	r18, 0xFF	; 255
     416:	80 e7       	ldi	r24, 0x70	; 112
     418:	92 e0       	ldi	r25, 0x02	; 2
     41a:	21 50       	subi	r18, 0x01	; 1
     41c:	80 40       	sbci	r24, 0x00	; 0
     41e:	90 40       	sbci	r25, 0x00	; 0
     420:	e1 f7       	brne	.-8      	; 0x41a <stepper_1_time+0xa>
     422:	00 c0       	rjmp	.+0      	; 0x424 <stepper_1_time+0x14>
     424:	00 00       	nop
			_delay_ms(100);
			PORTA = 0b00000110;
     426:	86 e0       	ldi	r24, 0x06	; 6
     428:	8b bb       	out	0x1b, r24	; 27
     42a:	2f ef       	ldi	r18, 0xFF	; 255
     42c:	80 e7       	ldi	r24, 0x70	; 112
     42e:	92 e0       	ldi	r25, 0x02	; 2
     430:	21 50       	subi	r18, 0x01	; 1
     432:	80 40       	sbci	r24, 0x00	; 0
     434:	90 40       	sbci	r25, 0x00	; 0
     436:	e1 f7       	brne	.-8      	; 0x430 <stepper_1_time+0x20>
     438:	00 c0       	rjmp	.+0      	; 0x43a <stepper_1_time+0x2a>
     43a:	00 00       	nop
			_delay_ms(100);
			PORTA = 0b00001100;
     43c:	8c e0       	ldi	r24, 0x0C	; 12
     43e:	8b bb       	out	0x1b, r24	; 27
     440:	2f ef       	ldi	r18, 0xFF	; 255
     442:	80 e7       	ldi	r24, 0x70	; 112
     444:	92 e0       	ldi	r25, 0x02	; 2
     446:	21 50       	subi	r18, 0x01	; 1
     448:	80 40       	sbci	r24, 0x00	; 0
     44a:	90 40       	sbci	r25, 0x00	; 0
     44c:	e1 f7       	brne	.-8      	; 0x446 <stepper_1_time+0x36>
     44e:	00 c0       	rjmp	.+0      	; 0x450 <stepper_1_time+0x40>
     450:	00 00       	nop
			_delay_ms(100);
			PORTA = 0b00011000;
     452:	88 e1       	ldi	r24, 0x18	; 24
     454:	8b bb       	out	0x1b, r24	; 27
     456:	2f ef       	ldi	r18, 0xFF	; 255
     458:	80 e7       	ldi	r24, 0x70	; 112
     45a:	92 e0       	ldi	r25, 0x02	; 2
     45c:	21 50       	subi	r18, 0x01	; 1
     45e:	80 40       	sbci	r24, 0x00	; 0
     460:	90 40       	sbci	r25, 0x00	; 0
     462:	e1 f7       	brne	.-8      	; 0x45c <stepper_1_time+0x4c>
     464:	00 c0       	rjmp	.+0      	; 0x466 <stepper_1_time+0x56>
     466:	00 00       	nop
     468:	08 95       	ret

0000046a <ADC_Read>:
			_delay_ms(100);
		}

		int ADC_Read()
		{
			ADMUX = 0x40;		   /* Vref: Avcc, ADC channel: 0 */
     46a:	80 e4       	ldi	r24, 0x40	; 64
     46c:	87 b9       	out	0x07, r24	; 7
			ADCSRA |= (1 << ADSC); /* Start conversion */
     46e:	86 b1       	in	r24, 0x06	; 6
     470:	80 64       	ori	r24, 0x40	; 64
     472:	86 b9       	out	0x06, r24	; 6
			while ((ADCSRA & (1 << ADIF)) == 0)
     474:	34 9b       	sbis	0x06, 4	; 6
     476:	fe cf       	rjmp	.-4      	; 0x474 <ADC_Read+0xa>
			;				   /*monitor end of conversion interrupt flag */
			ADCSRA |= (1 << ADIF); /* Set the ADIF bit of ADCSRA register */
     478:	86 b1       	in	r24, 0x06	; 6
     47a:	80 61       	ori	r24, 0x10	; 16
     47c:	86 b9       	out	0x06, r24	; 6
			return (ADCW);		   /* Return the ADCW */
     47e:	84 b1       	in	r24, 0x04	; 4
     480:	95 b1       	in	r25, 0x05	; 5
		}
     482:	08 95       	ret

00000484 <measure_tempurature>:

		float measure_tempurature()
		{

			ADC_Init(); /* Initialize the ADC */
     484:	0e 94 c6 00 	call	0x18c	; 0x18c <ADC_Init>

			ADC_value = ADC_Read(); /* store the analog data on a variable */
     488:	0e 94 35 02 	call	0x46a	; 0x46a <ADC_Read>
     48c:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <ADC_value+0x1>
     490:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <ADC_value>
			/* convert analog voltage into ?C and subtract the offset voltage */

			// Temperature = (((ADC_value * 4.88)-0.0027) / 10.0)-26;
			// dtostrf(Temperature, 3, 2, array);

			return Temperature = (((ADC_value * 4.88) - 0.0027) / 10.0) - 26;
     494:	bc 01       	movw	r22, r24
     496:	99 0f       	add	r25, r25
     498:	88 0b       	sbc	r24, r24
     49a:	99 0b       	sbc	r25, r25
     49c:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__floatsisf>
     4a0:	26 ef       	ldi	r18, 0xF6	; 246
     4a2:	38 e2       	ldi	r19, 0x28	; 40
     4a4:	4c e9       	ldi	r20, 0x9C	; 156
     4a6:	50 e4       	ldi	r21, 0x40	; 64
     4a8:	0e 94 99 08 	call	0x1132	; 0x1132 <__mulsf3>
     4ac:	2c e7       	ldi	r18, 0x7C	; 124
     4ae:	32 ef       	ldi	r19, 0xF2	; 242
     4b0:	40 e3       	ldi	r20, 0x30	; 48
     4b2:	5b e3       	ldi	r21, 0x3B	; 59
     4b4:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__subsf3>
     4b8:	20 e0       	ldi	r18, 0x00	; 0
     4ba:	30 e0       	ldi	r19, 0x00	; 0
     4bc:	40 e2       	ldi	r20, 0x20	; 32
     4be:	51 e4       	ldi	r21, 0x41	; 65
     4c0:	0e 94 70 07 	call	0xee0	; 0xee0 <__divsf3>
     4c4:	20 e0       	ldi	r18, 0x00	; 0
     4c6:	30 e0       	ldi	r19, 0x00	; 0
     4c8:	40 ed       	ldi	r20, 0xD0	; 208
     4ca:	51 e4       	ldi	r21, 0x41	; 65
     4cc:	0e 94 fe 06 	call	0xdfc	; 0xdfc <__subsf3>
     4d0:	60 93 11 02 	sts	0x0211, r22	; 0x800211 <Temperature>
     4d4:	70 93 12 02 	sts	0x0212, r23	; 0x800212 <Temperature+0x1>
     4d8:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <Temperature+0x2>
     4dc:	90 93 14 02 	sts	0x0214, r25	; 0x800214 <Temperature+0x3>
		}
     4e0:	08 95       	ret

000004e2 <loadCellRead>:

		float loadCellRead()
		{
     4e2:	cf 92       	push	r12
     4e4:	df 92       	push	r13
     4e6:	ef 92       	push	r14
     4e8:	ff 92       	push	r15
			hx711H = 0;
     4ea:	10 92 10 02 	sts	0x0210, r1	; 0x800210 <hx711H>
			hx711L = 0; // clear variables
     4ee:	10 92 0f 02 	sts	0x020F, r1	; 0x80020f <hx711L+0x1>
     4f2:	10 92 0e 02 	sts	0x020E, r1	; 0x80020e <hx711L>
			for (uint8_t i = 0; i < 8; i++)
     4f6:	80 e0       	ldi	r24, 0x00	; 0
     4f8:	33 c0       	rjmp	.+102    	; 0x560 <loadCellRead+0x7e>
			{					   // Load cell data high 8 bits
				PORTD |= (1 << 6); // Clock pin high
     4fa:	92 b3       	in	r25, 0x12	; 18
     4fc:	90 64       	ori	r25, 0x40	; 64
     4fe:	92 bb       	out	0x12, r25	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     500:	9a e1       	ldi	r25, 0x1A	; 26
     502:	9a 95       	dec	r25
     504:	f1 f7       	brne	.-4      	; 0x502 <loadCellRead+0x20>
     506:	00 c0       	rjmp	.+0      	; 0x508 <loadCellRead+0x26>
				_delay_us(10);
				if ((PIND & (1 << 5)) >> 5) // read data pin
     508:	85 9b       	sbis	0x10, 5	; 16
     50a:	11 c0       	rjmp	.+34     	; 0x52e <loadCellRead+0x4c>
				{
					hx711H |= (1 << (7 - i)); // set hx 711 varible
     50c:	47 e0       	ldi	r20, 0x07	; 7
     50e:	50 e0       	ldi	r21, 0x00	; 0
     510:	48 1b       	sub	r20, r24
     512:	51 09       	sbc	r21, r1
     514:	21 e0       	ldi	r18, 0x01	; 1
     516:	30 e0       	ldi	r19, 0x00	; 0
     518:	02 c0       	rjmp	.+4      	; 0x51e <loadCellRead+0x3c>
     51a:	22 0f       	add	r18, r18
     51c:	33 1f       	adc	r19, r19
     51e:	4a 95       	dec	r20
     520:	e2 f7       	brpl	.-8      	; 0x51a <loadCellRead+0x38>
     522:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <hx711H>
     526:	29 2b       	or	r18, r25
     528:	20 93 10 02 	sts	0x0210, r18	; 0x800210 <hx711H>
     52c:	11 c0       	rjmp	.+34     	; 0x550 <loadCellRead+0x6e>
				}
				else
				{
					hx711H &= ~(1 << (7 - i));
     52e:	47 e0       	ldi	r20, 0x07	; 7
     530:	50 e0       	ldi	r21, 0x00	; 0
     532:	48 1b       	sub	r20, r24
     534:	51 09       	sbc	r21, r1
     536:	21 e0       	ldi	r18, 0x01	; 1
     538:	30 e0       	ldi	r19, 0x00	; 0
     53a:	02 c0       	rjmp	.+4      	; 0x540 <loadCellRead+0x5e>
     53c:	22 0f       	add	r18, r18
     53e:	33 1f       	adc	r19, r19
     540:	4a 95       	dec	r20
     542:	e2 f7       	brpl	.-8      	; 0x53c <loadCellRead+0x5a>
     544:	20 95       	com	r18
     546:	90 91 10 02 	lds	r25, 0x0210	; 0x800210 <hx711H>
     54a:	29 23       	and	r18, r25
     54c:	20 93 10 02 	sts	0x0210, r18	; 0x800210 <hx711H>
				}
				PORTD &= ~(1 << 6); // Clock pin low
     550:	92 b3       	in	r25, 0x12	; 18
     552:	9f 7b       	andi	r25, 0xBF	; 191
     554:	92 bb       	out	0x12, r25	; 18
     556:	9d e0       	ldi	r25, 0x0D	; 13
     558:	9a 95       	dec	r25
     55a:	f1 f7       	brne	.-4      	; 0x558 <loadCellRead+0x76>
     55c:	00 00       	nop

		float loadCellRead()
		{
			hx711H = 0;
			hx711L = 0; // clear variables
			for (uint8_t i = 0; i < 8; i++)
     55e:	8f 5f       	subi	r24, 0xFF	; 255
     560:	88 30       	cpi	r24, 0x08	; 8
     562:	58 f2       	brcs	.-106    	; 0x4fa <loadCellRead+0x18>
     564:	80 e0       	ldi	r24, 0x00	; 0
     566:	3e c0       	rjmp	.+124    	; 0x5e4 <loadCellRead+0x102>
				_delay_us(5);
			}

			for (uint8_t i = 0; i < 16; i++)
			{					   // Load cell data low 16 bits
				PORTD |= (1 << 6); // Clock pin high
     568:	92 b3       	in	r25, 0x12	; 18
     56a:	90 64       	ori	r25, 0x40	; 64
     56c:	92 bb       	out	0x12, r25	; 18
     56e:	9a e1       	ldi	r25, 0x1A	; 26
     570:	9a 95       	dec	r25
     572:	f1 f7       	brne	.-4      	; 0x570 <loadCellRead+0x8e>
     574:	00 c0       	rjmp	.+0      	; 0x576 <loadCellRead+0x94>
				_delay_us(10);
				if ((PIND & (1 << 5)) >> 5) // read data pin
     576:	85 9b       	sbis	0x10, 5	; 16
     578:	16 c0       	rjmp	.+44     	; 0x5a6 <loadCellRead+0xc4>
				{
					hx711L |= (1 << (15 - i));
     57a:	4f e0       	ldi	r20, 0x0F	; 15
     57c:	50 e0       	ldi	r21, 0x00	; 0
     57e:	48 1b       	sub	r20, r24
     580:	51 09       	sbc	r21, r1
     582:	21 e0       	ldi	r18, 0x01	; 1
     584:	30 e0       	ldi	r19, 0x00	; 0
     586:	02 c0       	rjmp	.+4      	; 0x58c <loadCellRead+0xaa>
     588:	22 0f       	add	r18, r18
     58a:	33 1f       	adc	r19, r19
     58c:	4a 95       	dec	r20
     58e:	e2 f7       	brpl	.-8      	; 0x588 <loadCellRead+0xa6>
     590:	40 91 0e 02 	lds	r20, 0x020E	; 0x80020e <hx711L>
     594:	50 91 0f 02 	lds	r21, 0x020F	; 0x80020f <hx711L+0x1>
     598:	24 2b       	or	r18, r20
     59a:	35 2b       	or	r19, r21
     59c:	30 93 0f 02 	sts	0x020F, r19	; 0x80020f <hx711L+0x1>
     5a0:	20 93 0e 02 	sts	0x020E, r18	; 0x80020e <hx711L>
     5a4:	17 c0       	rjmp	.+46     	; 0x5d4 <loadCellRead+0xf2>
				}
				else
				{
					hx711L &= ~(1 << (15 - i));
     5a6:	4f e0       	ldi	r20, 0x0F	; 15
     5a8:	50 e0       	ldi	r21, 0x00	; 0
     5aa:	48 1b       	sub	r20, r24
     5ac:	51 09       	sbc	r21, r1
     5ae:	21 e0       	ldi	r18, 0x01	; 1
     5b0:	30 e0       	ldi	r19, 0x00	; 0
     5b2:	02 c0       	rjmp	.+4      	; 0x5b8 <loadCellRead+0xd6>
     5b4:	22 0f       	add	r18, r18
     5b6:	33 1f       	adc	r19, r19
     5b8:	4a 95       	dec	r20
     5ba:	e2 f7       	brpl	.-8      	; 0x5b4 <loadCellRead+0xd2>
     5bc:	20 95       	com	r18
     5be:	30 95       	com	r19
     5c0:	40 91 0e 02 	lds	r20, 0x020E	; 0x80020e <hx711L>
     5c4:	50 91 0f 02 	lds	r21, 0x020F	; 0x80020f <hx711L+0x1>
     5c8:	24 23       	and	r18, r20
     5ca:	35 23       	and	r19, r21
     5cc:	30 93 0f 02 	sts	0x020F, r19	; 0x80020f <hx711L+0x1>
     5d0:	20 93 0e 02 	sts	0x020E, r18	; 0x80020e <hx711L>
				}
				PORTD &= ~(1 << 6); // Clock pin low
     5d4:	92 b3       	in	r25, 0x12	; 18
     5d6:	9f 7b       	andi	r25, 0xBF	; 191
     5d8:	92 bb       	out	0x12, r25	; 18
     5da:	9d e0       	ldi	r25, 0x0D	; 13
     5dc:	9a 95       	dec	r25
     5de:	f1 f7       	brne	.-4      	; 0x5dc <loadCellRead+0xfa>
     5e0:	00 00       	nop
				}
				PORTD &= ~(1 << 6); // Clock pin low
				_delay_us(5);
			}

			for (uint8_t i = 0; i < 16; i++)
     5e2:	8f 5f       	subi	r24, 0xFF	; 255
     5e4:	80 31       	cpi	r24, 0x10	; 16
     5e6:	08 f4       	brcc	.+2      	; 0x5ea <loadCellRead+0x108>
     5e8:	bf cf       	rjmp	.-130    	; 0x568 <loadCellRead+0x86>
				}
				PORTD &= ~(1 << 6); // Clock pin low
				_delay_us(5);
			}

			hx711L = hx711L >> 1; // shift bits
     5ea:	80 91 0e 02 	lds	r24, 0x020E	; 0x80020e <hx711L>
     5ee:	90 91 0f 02 	lds	r25, 0x020F	; 0x80020f <hx711L+0x1>
     5f2:	96 95       	lsr	r25
     5f4:	87 95       	ror	r24
     5f6:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <hx711L+0x1>
     5fa:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <hx711L>

			if (hx711H & 1) // bit setup
     5fe:	60 91 10 02 	lds	r22, 0x0210	; 0x800210 <hx711H>
     602:	60 ff       	sbrs	r22, 0
     604:	05 c0       	rjmp	.+10     	; 0x610 <loadCellRead+0x12e>
			{
				hx711L |= (1 << 15);
     606:	90 68       	ori	r25, 0x80	; 128
     608:	90 93 0f 02 	sts	0x020F, r25	; 0x80020f <hx711L+0x1>
     60c:	80 93 0e 02 	sts	0x020E, r24	; 0x80020e <hx711L>
			}
			else
			{
				hx711L &= ~(1 << 15);
			}
			hx711H = hx711H >> 1;
     610:	66 95       	lsr	r22
     612:	60 93 10 02 	sts	0x0210, r22	; 0x800210 <hx711H>

			return (hx711H * (65536 / 18029.6)) + hx711L / 18029.6; // load cell calibration
     616:	70 e0       	ldi	r23, 0x00	; 0
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	90 e0       	ldi	r25, 0x00	; 0
     61c:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__floatsisf>
     620:	24 e6       	ldi	r18, 0x64	; 100
     622:	32 ea       	ldi	r19, 0xA2	; 162
     624:	48 e6       	ldi	r20, 0x68	; 104
     626:	50 e4       	ldi	r21, 0x40	; 64
     628:	0e 94 99 08 	call	0x1132	; 0x1132 <__mulsf3>
     62c:	6b 01       	movw	r12, r22
     62e:	7c 01       	movw	r14, r24
     630:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <hx711L>
     634:	70 91 0f 02 	lds	r23, 0x020F	; 0x80020f <hx711L+0x1>
     638:	80 e0       	ldi	r24, 0x00	; 0
     63a:	90 e0       	ldi	r25, 0x00	; 0
     63c:	0e 94 e2 07 	call	0xfc4	; 0xfc4 <__floatunsisf>
     640:	23 e3       	ldi	r18, 0x33	; 51
     642:	3b ed       	ldi	r19, 0xDB	; 219
     644:	4c e8       	ldi	r20, 0x8C	; 140
     646:	56 e4       	ldi	r21, 0x46	; 70
     648:	0e 94 70 07 	call	0xee0	; 0xee0 <__divsf3>
     64c:	9b 01       	movw	r18, r22
     64e:	ac 01       	movw	r20, r24
     650:	c7 01       	movw	r24, r14
     652:	b6 01       	movw	r22, r12
     654:	0e 94 ff 06 	call	0xdfe	; 0xdfe <__addsf3>
		}
     658:	ff 90       	pop	r15
     65a:	ef 90       	pop	r14
     65c:	df 90       	pop	r13
     65e:	cf 90       	pop	r12
     660:	08 95       	ret

00000662 <valve1>:

		void valve1()
		{

			if (valve_1_state == false)
     662:	80 91 09 02 	lds	r24, 0x0209	; 0x800209 <valve_1_state>
     666:	81 11       	cpse	r24, r1
     668:	07 c0       	rjmp	.+14     	; 0x678 <valve1+0x16>
			{
				PORTA |= (1 << PINA5);
     66a:	8b b3       	in	r24, 0x1b	; 27
     66c:	80 62       	ori	r24, 0x20	; 32
     66e:	8b bb       	out	0x1b, r24	; 27
				valve_1_state = true;
     670:	81 e0       	ldi	r24, 0x01	; 1
     672:	80 93 09 02 	sts	0x0209, r24	; 0x800209 <valve_1_state>
     676:	08 95       	ret
			}
			else
			{
				PORTA &= ~(1 << PINA5);
     678:	8b b3       	in	r24, 0x1b	; 27
     67a:	8f 7d       	andi	r24, 0xDF	; 223
     67c:	8b bb       	out	0x1b, r24	; 27
				valve_1_state = false;
     67e:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <valve_1_state>
     682:	08 95       	ret

00000684 <valve2>:
		}

		void valve2()
		{

			if (valve_2_state == false)
     684:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <valve_2_state>
     688:	81 11       	cpse	r24, r1
     68a:	07 c0       	rjmp	.+14     	; 0x69a <valve2+0x16>
			{
				PORTA |= (1 << PINA6);
     68c:	8b b3       	in	r24, 0x1b	; 27
     68e:	80 64       	ori	r24, 0x40	; 64
     690:	8b bb       	out	0x1b, r24	; 27
				valve_2_state = true;
     692:	81 e0       	ldi	r24, 0x01	; 1
     694:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <valve_2_state>
     698:	08 95       	ret
			}
			else
			{
				PORTA &= ~(1 << PINA6);
     69a:	8b b3       	in	r24, 0x1b	; 27
     69c:	8f 7b       	andi	r24, 0xBF	; 191
     69e:	8b bb       	out	0x1b, r24	; 27
				valve_2_state = false;
     6a0:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <valve_2_state>
     6a4:	08 95       	ret

000006a6 <valve3>:
		}

		void valve3()
		{

			if (valve_3_state == false)
     6a6:	80 91 07 02 	lds	r24, 0x0207	; 0x800207 <valve_3_state>
     6aa:	81 11       	cpse	r24, r1
     6ac:	07 c0       	rjmp	.+14     	; 0x6bc <valve3+0x16>
			{
				PORTA |= (1 << PINA7);
     6ae:	8b b3       	in	r24, 0x1b	; 27
     6b0:	80 68       	ori	r24, 0x80	; 128
     6b2:	8b bb       	out	0x1b, r24	; 27
				valve_3_state = true;
     6b4:	81 e0       	ldi	r24, 0x01	; 1
     6b6:	80 93 07 02 	sts	0x0207, r24	; 0x800207 <valve_3_state>
     6ba:	08 95       	ret
			}
			else
			{
				PORTA &= ~(1 << PINA7);
     6bc:	8b b3       	in	r24, 0x1b	; 27
     6be:	8f 77       	andi	r24, 0x7F	; 127
     6c0:	8b bb       	out	0x1b, r24	; 27
				valve_3_state = false;
     6c2:	10 92 07 02 	sts	0x0207, r1	; 0x800207 <valve_3_state>
     6c6:	08 95       	ret

000006c8 <heater>:
			}
		}
		void heater()
		{

			if (heater_state == true)
     6c8:	80 91 70 00 	lds	r24, 0x0070	; 0x800070 <heater_state>
     6cc:	88 23       	and	r24, r24
     6ce:	31 f0       	breq	.+12     	; 0x6dc <heater+0x14>
			{
				PORTD |= (1 << PIND0);
     6d0:	82 b3       	in	r24, 0x12	; 18
     6d2:	81 60       	ori	r24, 0x01	; 1
     6d4:	82 bb       	out	0x12, r24	; 18
				heater_state = false;
     6d6:	10 92 70 00 	sts	0x0070, r1	; 0x800070 <heater_state>
     6da:	08 95       	ret
			}
			else
			{
				PORTD &= ~(1 << PINA0);
     6dc:	82 b3       	in	r24, 0x12	; 18
     6de:	8e 7f       	andi	r24, 0xFE	; 254
     6e0:	82 bb       	out	0x12, r24	; 18
				heater_state = true;
     6e2:	81 e0       	ldi	r24, 0x01	; 1
     6e4:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <heater_state>
     6e8:	08 95       	ret

000006ea <buzzer>:
		}

		void buzzer()
		{

			if (buzzer_state == false)
     6ea:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <buzzer_state>
     6ee:	81 11       	cpse	r24, r1
     6f0:	07 c0       	rjmp	.+14     	; 0x700 <buzzer+0x16>
			{
				PORTD |= (1 << PIND1);
     6f2:	82 b3       	in	r24, 0x12	; 18
     6f4:	82 60       	ori	r24, 0x02	; 2
     6f6:	82 bb       	out	0x12, r24	; 18
				buzzer_state = true;
     6f8:	81 e0       	ldi	r24, 0x01	; 1
     6fa:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <buzzer_state>
     6fe:	08 95       	ret
			}
			else
			{
				PORTD &= ~(1 << PIND1);
     700:	82 b3       	in	r24, 0x12	; 18
     702:	8d 7f       	andi	r24, 0xFD	; 253
     704:	82 bb       	out	0x12, r24	; 18
				buzzer_state = false;
     706:	10 92 06 02 	sts	0x0206, r1	; 0x800206 <buzzer_state>
     70a:	08 95       	ret

0000070c <append>:
			}
		}
		void append(char* s, char c) {
			int len = strlen(s);
     70c:	fc 01       	movw	r30, r24
     70e:	01 90       	ld	r0, Z+
     710:	00 20       	and	r0, r0
     712:	e9 f7       	brne	.-6      	; 0x70e <append+0x2>
     714:	31 97       	sbiw	r30, 0x01	; 1
     716:	e8 1b       	sub	r30, r24
     718:	f9 0b       	sbc	r31, r25
			s[len] = c;
     71a:	dc 01       	movw	r26, r24
     71c:	ae 0f       	add	r26, r30
     71e:	bf 1f       	adc	r27, r31
     720:	6c 93       	st	X, r22
			s[len+1] = '\0';
     722:	31 96       	adiw	r30, 0x01	; 1
     724:	e8 0f       	add	r30, r24
     726:	f9 1f       	adc	r31, r25
     728:	10 82       	st	Z, r1
     72a:	08 95       	ret

0000072c <increase_tempurature_manually>:
			}
		}
	}

	void increase_tempurature_manually()
	{
     72c:	0f 93       	push	r16
     72e:	1f 93       	push	r17
     730:	cf 93       	push	r28
     732:	df 93       	push	r29
     734:	cd b7       	in	r28, 0x3d	; 61
     736:	de b7       	in	r29, 0x3e	; 62
     738:	2a 97       	sbiw	r28, 0x0a	; 10
     73a:	0f b6       	in	r0, 0x3f	; 63
     73c:	f8 94       	cli
     73e:	de bf       	out	0x3e, r29	; 62
     740:	0f be       	out	0x3f, r0	; 63
     742:	cd bf       	out	0x3d, r28	; 61

		char temp[10]="";
     744:	1a 82       	std	Y+2, r1	; 0x02
     746:	19 82       	std	Y+1, r1	; 0x01
     748:	fe 01       	movw	r30, r28
     74a:	33 96       	adiw	r30, 0x03	; 3
     74c:	88 e0       	ldi	r24, 0x08	; 8
     74e:	df 01       	movw	r26, r30
     750:	1d 92       	st	X+, r1
     752:	8a 95       	dec	r24
     754:	e9 f7       	brne	.-6      	; 0x750 <increase_tempurature_manually+0x24>

		LCD_Clear();
     756:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
		LCD_Command(0x80);
     75a:	80 e8       	ldi	r24, 0x80	; 128
     75c:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("Enter Tempurature");
     760:	81 e7       	ldi	r24, 0x71	; 113
     762:	90 e0       	ldi	r25, 0x00	; 0
     764:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
		LCD_Command(0xc1);
     768:	81 ec       	ldi	r24, 0xC1	; 193
     76a:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("and press +");
     76e:	83 e8       	ldi	r24, 0x83	; 131
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>

		while (1)
		{
			char a = keyfind();
     776:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
		
		
			if (a == '0' || a == '1' || a == '2' || a == '3' || a == '4' || a == '5' || a == '6' || a == '7' || a == '8' || a == '9')
     77a:	90 ed       	ldi	r25, 0xD0	; 208
     77c:	98 0f       	add	r25, r24
     77e:	9a 30       	cpi	r25, 0x0A	; 10
     780:	a8 f4       	brcc	.+42     	; 0x7ac <increase_tempurature_manually+0x80>
			{
				//strncat(temp, &a, 1);
				//strcat(temp,&a);
				append(temp,a);
     782:	68 2f       	mov	r22, r24
     784:	ce 01       	movw	r24, r28
     786:	01 96       	adiw	r24, 0x01	; 1
     788:	0e 94 86 03 	call	0x70c	; 0x70c <append>
				LCD_Clear();
     78c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
				LCD_String(temp);
     790:	ce 01       	movw	r24, r28
     792:	01 96       	adiw	r24, 0x01	; 1
     794:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     798:	bf ef       	ldi	r27, 0xFF	; 255
     79a:	24 e3       	ldi	r18, 0x34	; 52
     79c:	8c e0       	ldi	r24, 0x0C	; 12
     79e:	b1 50       	subi	r27, 0x01	; 1
     7a0:	20 40       	sbci	r18, 0x00	; 0
     7a2:	80 40       	sbci	r24, 0x00	; 0
     7a4:	e1 f7       	brne	.-8      	; 0x79e <increase_tempurature_manually+0x72>
     7a6:	00 c0       	rjmp	.+0      	; 0x7a8 <increase_tempurature_manually+0x7c>
     7a8:	00 00       	nop
     7aa:	e5 cf       	rjmp	.-54     	; 0x776 <increase_tempurature_manually+0x4a>
				_delay_ms(500);
			}
			else if (a == '+')
     7ac:	8b 32       	cpi	r24, 0x2B	; 43
     7ae:	19 f7       	brne	.-58     	; 0x776 <increase_tempurature_manually+0x4a>
			{
				tempurature_to_increase = atoi(temp);
     7b0:	ce 01       	movw	r24, r28
     7b2:	01 96       	adiw	r24, 0x01	; 1
     7b4:	0e 94 26 09 	call	0x124c	; 0x124c <atoi>
     7b8:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <__data_end+0x1>
     7bc:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <__data_end>
				heater();
     7c0:	0e 94 64 03 	call	0x6c8	; 0x6c8 <heater>
				while (1)
				{
					stepper_1_time();
     7c4:	0e 94 08 02 	call	0x410	; 0x410 <stepper_1_time>
					Temperature = measure_tempurature();
     7c8:	0e 94 42 02 	call	0x484	; 0x484 <measure_tempurature>
     7cc:	60 93 11 02 	sts	0x0211, r22	; 0x800211 <Temperature>
     7d0:	70 93 12 02 	sts	0x0212, r23	; 0x800212 <Temperature+0x1>
     7d4:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <Temperature+0x2>
     7d8:	90 93 14 02 	sts	0x0214, r25	; 0x800214 <Temperature+0x3>
					dtostrf(Temperature, 3, 2, array);
     7dc:	0d e7       	ldi	r16, 0x7D	; 125
     7de:	12 e0       	ldi	r17, 0x02	; 2
     7e0:	22 e0       	ldi	r18, 0x02	; 2
     7e2:	43 e0       	ldi	r20, 0x03	; 3
     7e4:	0e 94 06 09 	call	0x120c	; 0x120c <dtostrf>
					LCD_Clear();
     7e8:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
					LCD_String(array);
     7ec:	c8 01       	movw	r24, r16
     7ee:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
					if (Temperature > tempurature_to_increase)
     7f2:	60 91 04 02 	lds	r22, 0x0204	; 0x800204 <__data_end>
     7f6:	70 91 05 02 	lds	r23, 0x0205	; 0x800205 <__data_end+0x1>
     7fa:	07 2e       	mov	r0, r23
     7fc:	00 0c       	add	r0, r0
     7fe:	88 0b       	sbc	r24, r24
     800:	99 0b       	sbc	r25, r25
     802:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__floatsisf>
     806:	20 91 11 02 	lds	r18, 0x0211	; 0x800211 <Temperature>
     80a:	30 91 12 02 	lds	r19, 0x0212	; 0x800212 <Temperature+0x1>
     80e:	40 91 13 02 	lds	r20, 0x0213	; 0x800213 <Temperature+0x2>
     812:	50 91 14 02 	lds	r21, 0x0214	; 0x800214 <Temperature+0x3>
     816:	0e 94 6b 07 	call	0xed6	; 0xed6 <__cmpsf2>
     81a:	88 23       	and	r24, r24
     81c:	9c f6       	brge	.-90     	; 0x7c4 <increase_tempurature_manually+0x98>
					{
						heater();
     81e:	0e 94 64 03 	call	0x6c8	; 0x6c8 <heater>
						LCD_String("done");
     822:	8f e8       	ldi	r24, 0x8F	; 143
     824:	90 e0       	ldi	r25, 0x00	; 0
     826:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
					}
				}
				break;
			}
		}
	}
     82a:	2a 96       	adiw	r28, 0x0a	; 10
     82c:	0f b6       	in	r0, 0x3f	; 63
     82e:	f8 94       	cli
     830:	de bf       	out	0x3e, r29	; 62
     832:	0f be       	out	0x3f, r0	; 63
     834:	cd bf       	out	0x3d, r28	; 61
     836:	df 91       	pop	r29
     838:	cf 91       	pop	r28
     83a:	1f 91       	pop	r17
     83c:	0f 91       	pop	r16
     83e:	08 95       	ret

00000840 <main>:
		_delay_ms(2);
		LCD_Command(0x80); /* Cursor 1st row 0th position */
	}

	int main(void)
	{
     840:	cf 93       	push	r28
     842:	df 93       	push	r29
     844:	cd b7       	in	r28, 0x3d	; 61
     846:	de b7       	in	r29, 0x3e	; 62
     848:	c4 56       	subi	r28, 0x64	; 100
     84a:	d1 09       	sbc	r29, r1
     84c:	0f b6       	in	r0, 0x3f	; 63
     84e:	f8 94       	cli
     850:	de bf       	out	0x3e, r29	; 62
     852:	0f be       	out	0x3f, r0	; 63
     854:	cd bf       	out	0x3d, r28	; 61
		
		DDRD = 0xFF;
     856:	9f ef       	ldi	r25, 0xFF	; 255
     858:	91 bb       	out	0x11, r25	; 17
		//PORTD = 0x00;
		//DDRD |= (1 << 6);	// Load cell clock pin
		PORTD &= ~(1 << 6); // Clock pin low
     85a:	82 b3       	in	r24, 0x12	; 18
     85c:	8f 7b       	andi	r24, 0xBF	; 191
     85e:	82 bb       	out	0x12, r24	; 18
		// DDRA &= 0b11111111;
		DDRA = 0xFF;
     860:	9a bb       	out	0x1a, r25	; 26
		PORTA = 0x00;
     862:	1b ba       	out	0x1b, r1	; 27

		char buf[100];

		LCD_Init();
     864:	0e 94 31 01 	call	0x262	; 0x262 <LCD_Init>
		LCD_Command(0x80);
     868:	80 e8       	ldi	r24, 0x80	; 128
     86a:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("welcome");
     86e:	84 e9       	ldi	r24, 0x94	; 148
     870:	90 e0       	ldi	r25, 0x00	; 0
     872:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     876:	2f ef       	ldi	r18, 0xFF	; 255
     878:	83 ed       	ldi	r24, 0xD3	; 211
     87a:	90 e3       	ldi	r25, 0x30	; 48
     87c:	21 50       	subi	r18, 0x01	; 1
     87e:	80 40       	sbci	r24, 0x00	; 0
     880:	90 40       	sbci	r25, 0x00	; 0
     882:	e1 f7       	brne	.-8      	; 0x87c <__stack+0x1d>
     884:	00 c0       	rjmp	.+0      	; 0x886 <__stack+0x27>
     886:	00 00       	nop
		_delay_ms(2000);
		LCD_Clear();
     888:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>

		LCD_String("We are team 18");
     88c:	8c e9       	ldi	r24, 0x9C	; 156
     88e:	90 e0       	ldi	r25, 0x00	; 0
     890:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     894:	2f ef       	ldi	r18, 0xFF	; 255
     896:	8d e3       	ldi	r24, 0x3D	; 61
     898:	99 e4       	ldi	r25, 0x49	; 73
     89a:	21 50       	subi	r18, 0x01	; 1
     89c:	80 40       	sbci	r24, 0x00	; 0
     89e:	90 40       	sbci	r25, 0x00	; 0
     8a0:	e1 f7       	brne	.-8      	; 0x89a <__stack+0x3b>
     8a2:	00 c0       	rjmp	.+0      	; 0x8a4 <__stack+0x45>
     8a4:	00 00       	nop
		_delay_ms(3000);
		LCD_Clear();
     8a6:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
		LCD_Command(0x80);
     8aa:	80 e8       	ldi	r24, 0x80	; 128
     8ac:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("This is our");
     8b0:	8b ea       	ldi	r24, 0xAB	; 171
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
		LCD_Command(0xc1);
     8b8:	81 ec       	ldi	r24, 0xC1	; 193
     8ba:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("Kithul treacle");
     8be:	87 eb       	ldi	r24, 0xB7	; 183
     8c0:	90 e0       	ldi	r25, 0x00	; 0
     8c2:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     8c6:	2f ef       	ldi	r18, 0xFF	; 255
     8c8:	8d e3       	ldi	r24, 0x3D	; 61
     8ca:	99 e4       	ldi	r25, 0x49	; 73
     8cc:	21 50       	subi	r18, 0x01	; 1
     8ce:	80 40       	sbci	r24, 0x00	; 0
     8d0:	90 40       	sbci	r25, 0x00	; 0
     8d2:	e1 f7       	brne	.-8      	; 0x8cc <__stack+0x6d>
     8d4:	00 c0       	rjmp	.+0      	; 0x8d6 <__stack+0x77>
     8d6:	00 00       	nop
		_delay_ms(3000);
		LCD_Clear();
     8d8:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
		LCD_Command(0x80);
     8dc:	80 e8       	ldi	r24, 0x80	; 128
     8de:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String(" and jaggery ");
     8e2:	86 ec       	ldi	r24, 0xC6	; 198
     8e4:	90 e0       	ldi	r25, 0x00	; 0
     8e6:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
		LCD_Command(0xc1);
     8ea:	81 ec       	ldi	r24, 0xC1	; 193
     8ec:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String(" Making Machine");
     8f0:	84 ed       	ldi	r24, 0xD4	; 212
     8f2:	90 e0       	ldi	r25, 0x00	; 0
     8f4:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     8f8:	2f ef       	ldi	r18, 0xFF	; 255
     8fa:	8d e3       	ldi	r24, 0x3D	; 61
     8fc:	99 e4       	ldi	r25, 0x49	; 73
     8fe:	21 50       	subi	r18, 0x01	; 1
     900:	80 40       	sbci	r24, 0x00	; 0
     902:	90 40       	sbci	r25, 0x00	; 0
     904:	e1 f7       	brne	.-8      	; 0x8fe <__stack+0x9f>
     906:	00 c0       	rjmp	.+0      	; 0x908 <__stack+0xa9>
     908:	00 00       	nop
		_delay_ms(3000);
		LCD_Clear();
     90a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>

		LCD_String("put sap ");
     90e:	84 ee       	ldi	r24, 0xE4	; 228
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
		LCD_Command(0xc1);
     916:	81 ec       	ldi	r24, 0xC1	; 193
     918:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("to the container");
     91c:	8d ee       	ldi	r24, 0xED	; 237
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     924:	2f ef       	ldi	r18, 0xFF	; 255
     926:	83 ed       	ldi	r24, 0xD3	; 211
     928:	90 e3       	ldi	r25, 0x30	; 48
     92a:	21 50       	subi	r18, 0x01	; 1
     92c:	80 40       	sbci	r24, 0x00	; 0
     92e:	90 40       	sbci	r25, 0x00	; 0
     930:	e1 f7       	brne	.-8      	; 0x92a <__stack+0xcb>
     932:	00 c0       	rjmp	.+0      	; 0x934 <__stack+0xd5>
     934:	00 00       	nop
		_delay_ms(2000);

		while (1)
		{
			hx = loadCellRead();
     936:	0e 94 71 02 	call	0x4e2	; 0x4e2 <loadCellRead>
     93a:	6b 01       	movw	r12, r22
     93c:	7c 01       	movw	r14, r24
     93e:	60 93 0a 02 	sts	0x020A, r22	; 0x80020a <hx>
     942:	70 93 0b 02 	sts	0x020B, r23	; 0x80020b <hx+0x1>
     946:	80 93 0c 02 	sts	0x020C, r24	; 0x80020c <hx+0x2>
     94a:	90 93 0d 02 	sts	0x020D, r25	; 0x80020d <hx+0x3>
			if (hx > 15)
     94e:	20 e0       	ldi	r18, 0x00	; 0
     950:	30 e0       	ldi	r19, 0x00	; 0
     952:	40 e7       	ldi	r20, 0x70	; 112
     954:	51 e4       	ldi	r21, 0x41	; 65
     956:	0e 94 94 08 	call	0x1128	; 0x1128 <__gesf2>
     95a:	18 16       	cp	r1, r24
     95c:	c4 f0       	brlt	.+48     	; 0x98e <__stack+0x12f>
			{
				break;
			}
			dtostrf(hx, 2, 2, buf);
     95e:	8e 01       	movw	r16, r28
     960:	0f 5f       	subi	r16, 0xFF	; 255
     962:	1f 4f       	sbci	r17, 0xFF	; 255
     964:	22 e0       	ldi	r18, 0x02	; 2
     966:	42 e0       	ldi	r20, 0x02	; 2
     968:	c7 01       	movw	r24, r14
     96a:	b6 01       	movw	r22, r12
     96c:	0e 94 06 09 	call	0x120c	; 0x120c <dtostrf>
			LCD_Clear();
     970:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
			LCD_String(buf);
     974:	c8 01       	movw	r24, r16
     976:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     97a:	2f ef       	ldi	r18, 0xFF	; 255
     97c:	81 ee       	ldi	r24, 0xE1	; 225
     97e:	94 e0       	ldi	r25, 0x04	; 4
     980:	21 50       	subi	r18, 0x01	; 1
     982:	80 40       	sbci	r24, 0x00	; 0
     984:	90 40       	sbci	r25, 0x00	; 0
     986:	e1 f7       	brne	.-8      	; 0x980 <__stack+0x121>
     988:	00 c0       	rjmp	.+0      	; 0x98a <__stack+0x12b>
     98a:	00 00       	nop
     98c:	d4 cf       	rjmp	.-88     	; 0x936 <__stack+0xd7>
			_delay_ms(200);
		}

		LCD_Clear();
     98e:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
		LCD_Command(0x80);
     992:	80 e8       	ldi	r24, 0x80	; 128
     994:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("container filled");
     998:	8e ef       	ldi	r24, 0xFE	; 254
     99a:	90 e0       	ldi	r25, 0x00	; 0
     99c:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     9a0:	2f ef       	ldi	r18, 0xFF	; 255
     9a2:	83 ed       	ldi	r24, 0xD3	; 211
     9a4:	90 e3       	ldi	r25, 0x30	; 48
     9a6:	21 50       	subi	r18, 0x01	; 1
     9a8:	80 40       	sbci	r24, 0x00	; 0
     9aa:	90 40       	sbci	r25, 0x00	; 0
     9ac:	e1 f7       	brne	.-8      	; 0x9a6 <__stack+0x147>
     9ae:	00 c0       	rjmp	.+0      	; 0x9b0 <__stack+0x151>
     9b0:	00 00       	nop
		_delay_ms(2000);
		LCD_Clear();
     9b2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
		LCD_String("press 1 to cont");
     9b6:	8f e0       	ldi	r24, 0x0F	; 15
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
        buzzer();
     9be:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
		valve1();
     9c2:	0e 94 31 03 	call	0x662	; 0x662 <valve1>

		while (1)
		{
			char a = keyfind();
     9c6:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
			if (a == '1')
     9ca:	81 33       	cpi	r24, 0x31	; 49
     9cc:	e1 f7       	brne	.-8      	; 0x9c6 <__stack+0x167>
			{
				buzzer();
     9ce:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
				LCD_Clear();
     9d2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
				LCD_Command(0x80);
     9d6:	80 e8       	ldi	r24, 0x80	; 128
     9d8:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
				LCD_String("select option");
     9dc:	8f e1       	ldi	r24, 0x1F	; 31
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
				break;
			}
		}

		LCD_Clear();
     9e4:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
		LCD_Command(0x80);
     9e8:	80 e8       	ldi	r24, 0x80	; 128
     9ea:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("press 1: tricle");
     9ee:	8d e2       	ldi	r24, 0x2D	; 45
     9f0:	91 e0       	ldi	r25, 0x01	; 1
     9f2:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
		LCD_Command(0xc1);
     9f6:	81 ec       	ldi	r24, 0xC1	; 193
     9f8:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
		LCD_String("press 2 to juggery");
     9fc:	8d e3       	ldi	r24, 0x3D	; 61
     9fe:	91 e0       	ldi	r25, 0x01	; 1
     a00:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>

		while (1)
		{
			char a = keyfind();
     a04:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
			if (a == '1')
     a08:	81 33       	cpi	r24, 0x31	; 49
     a0a:	09 f0       	breq	.+2      	; 0xa0e <__stack+0x1af>
     a0c:	fa c0       	rjmp	.+500    	; 0xc02 <__stack+0x3a3>
			{
				LCD_Clear();
     a0e:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
				LCD_Command(0x80);
     a12:	80 e8       	ldi	r24, 0x80	; 128
     a14:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
				LCD_String("tricle creating");
     a18:	80 e5       	ldi	r24, 0x50	; 80
     a1a:	91 e0       	ldi	r25, 0x01	; 1
     a1c:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
				heater();
     a20:	0e 94 64 03 	call	0x6c8	; 0x6c8 <heater>
				valve1();
     a24:	0e 94 31 03 	call	0x662	; 0x662 <valve1>
				while (1)
				{
					stepper_1_time();
     a28:	0e 94 08 02 	call	0x410	; 0x410 <stepper_1_time>
					Temperature = measure_tempurature();
     a2c:	0e 94 42 02 	call	0x484	; 0x484 <measure_tempurature>
     a30:	60 93 11 02 	sts	0x0211, r22	; 0x800211 <Temperature>
     a34:	70 93 12 02 	sts	0x0212, r23	; 0x800212 <Temperature+0x1>
     a38:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <Temperature+0x2>
     a3c:	90 93 14 02 	sts	0x0214, r25	; 0x800214 <Temperature+0x3>
					dtostrf(Temperature, 3, 2, array);
     a40:	0d e7       	ldi	r16, 0x7D	; 125
     a42:	12 e0       	ldi	r17, 0x02	; 2
     a44:	22 e0       	ldi	r18, 0x02	; 2
     a46:	43 e0       	ldi	r20, 0x03	; 3
     a48:	0e 94 06 09 	call	0x120c	; 0x120c <dtostrf>
					LCD_Clear();
     a4c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>

					if (Temperature > 200)
     a50:	60 91 11 02 	lds	r22, 0x0211	; 0x800211 <Temperature>
     a54:	70 91 12 02 	lds	r23, 0x0212	; 0x800212 <Temperature+0x1>
     a58:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <Temperature+0x2>
     a5c:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <Temperature+0x3>
     a60:	20 e0       	ldi	r18, 0x00	; 0
     a62:	30 e0       	ldi	r19, 0x00	; 0
     a64:	48 e4       	ldi	r20, 0x48	; 72
     a66:	53 e4       	ldi	r21, 0x43	; 67
     a68:	0e 94 94 08 	call	0x1128	; 0x1128 <__gesf2>
     a6c:	18 16       	cp	r1, r24
     a6e:	b4 f4       	brge	.+44     	; 0xa9c <__stack+0x23d>
					{
						heater();
     a70:	0e 94 64 03 	call	0x6c8	; 0x6c8 <heater>
						LCD_String("triccle created");
     a74:	80 e6       	ldi	r24, 0x60	; 96
     a76:	91 e0       	ldi	r25, 0x01	; 1
     a78:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
						break;
					}
					LCD_String(array);
				}

				buzzer();
     a7c:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
				LCD_Clear();
     a80:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
				LCD_String("press 1 to");
     a84:	80 e7       	ldi	r24, 0x70	; 112
     a86:	91 e0       	ldi	r25, 0x01	; 1
     a88:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
				LCD_Command(0xc1);
     a8c:	81 ec       	ldi	r24, 0xC1	; 193
     a8e:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
				LCD_String("continue");
     a92:	8b e7       	ldi	r24, 0x7B	; 123
     a94:	91 e0       	ldi	r25, 0x01	; 1
     a96:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     a9a:	05 c0       	rjmp	.+10     	; 0xaa6 <__stack+0x247>
					{
						heater();
						LCD_String("triccle created");
						break;
					}
					LCD_String(array);
     a9c:	8d e7       	ldi	r24, 0x7D	; 125
     a9e:	92 e0       	ldi	r25, 0x02	; 2
     aa0:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
				}
     aa4:	c1 cf       	rjmp	.-126    	; 0xa28 <__stack+0x1c9>

				

				while (1)
				{
					a = keyfind();
     aa6:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
					if (a == '1')
     aaa:	81 33       	cpi	r24, 0x31	; 49
     aac:	e1 f7       	brne	.-8      	; 0xaa6 <__stack+0x247>
					{
						buzzer();
     aae:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
						LCD_Clear();
     ab2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
						LCD_Command(0x80);
     ab6:	80 e8       	ldi	r24, 0x80	; 128
     ab8:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
						LCD_String("Press 1 :");
     abc:	84 e8       	ldi	r24, 0x84	; 132
     abe:	91 e0       	ldi	r25, 0x01	; 1
     ac0:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
						LCD_Command(0xc1);
     ac4:	81 ec       	ldi	r24, 0xC1	; 193
     ac6:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
						LCD_String("To open valve");
     aca:	8e e8       	ldi	r24, 0x8E	; 142
     acc:	91 e0       	ldi	r25, 0x01	; 1
     ace:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     ad2:	2f ef       	ldi	r18, 0xFF	; 255
     ad4:	8d e3       	ldi	r24, 0x3D	; 61
     ad6:	99 e4       	ldi	r25, 0x49	; 73
     ad8:	21 50       	subi	r18, 0x01	; 1
     ada:	80 40       	sbci	r24, 0x00	; 0
     adc:	90 40       	sbci	r25, 0x00	; 0
     ade:	e1 f7       	brne	.-8      	; 0xad8 <__stack+0x279>
     ae0:	00 c0       	rjmp	.+0      	; 0xae2 <__stack+0x283>
     ae2:	00 00       	nop
						_delay_ms(3000);
						LCD_Clear();
     ae4:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
						LCD_Command(0x80);
     ae8:	80 e8       	ldi	r24, 0x80	; 128
     aea:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
						LCD_String("Press 2 :");
     aee:	8c e9       	ldi	r24, 0x9C	; 156
     af0:	91 e0       	ldi	r25, 0x01	; 1
     af2:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
						LCD_Command(0xc1);
     af6:	81 ec       	ldi	r24, 0xC1	; 193
     af8:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
						LCD_String("To increase temp");
     afc:	86 ea       	ldi	r24, 0xA6	; 166
     afe:	91 e0       	ldi	r25, 0x01	; 1
     b00:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     b04:	2f ef       	ldi	r18, 0xFF	; 255
     b06:	8d e3       	ldi	r24, 0x3D	; 61
     b08:	99 e4       	ldi	r25, 0x49	; 73
     b0a:	21 50       	subi	r18, 0x01	; 1
     b0c:	80 40       	sbci	r24, 0x00	; 0
     b0e:	90 40       	sbci	r25, 0x00	; 0
     b10:	e1 f7       	brne	.-8      	; 0xb0a <__stack+0x2ab>
     b12:	00 c0       	rjmp	.+0      	; 0xb14 <__stack+0x2b5>
     b14:	00 00       	nop
						_delay_ms(3000);

						while (1)
						{
							a = keyfind();
     b16:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
							if (a == '1')
     b1a:	81 33       	cpi	r24, 0x31	; 49
     b1c:	59 f5       	brne	.+86     	; 0xb74 <__stack+0x315>
							{
								valve2();
     b1e:	0e 94 42 03 	call	0x684	; 0x684 <valve2>
								LCD_Clear();
     b22:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
								LCD_Command(0x80);
     b26:	80 e8       	ldi	r24, 0x80	; 128
     b28:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
								LCD_String("Valve is open");
     b2c:	87 eb       	ldi	r24, 0xB7	; 183
     b2e:	91 e0       	ldi	r25, 0x01	; 1
     b30:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
								LCD_Command(0xc1);
     b34:	81 ec       	ldi	r24, 0xC1	; 193
     b36:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
								LCD_String("press2:close valve");
     b3a:	85 ec       	ldi	r24, 0xC5	; 197
     b3c:	91 e0       	ldi	r25, 0x01	; 1
     b3e:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>

								while (1)
								{
									a = keyfind();
     b42:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
									if (a == '2')
     b46:	82 33       	cpi	r24, 0x32	; 50
     b48:	e1 f7       	brne	.-8      	; 0xb42 <__stack+0x2e3>
									{
										valve2();
     b4a:	0e 94 42 03 	call	0x684	; 0x684 <valve2>
										LCD_Clear();
     b4e:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
										LCD_Command(0x80);
     b52:	80 e8       	ldi	r24, 0x80	; 128
     b54:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
										LCD_String("Thank You");
     b58:	88 ed       	ldi	r24, 0xD8	; 216
     b5a:	91 e0       	ldi	r25, 0x01	; 1
     b5c:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     b60:	2f ef       	ldi	r18, 0xFF	; 255
     b62:	8d e3       	ldi	r24, 0x3D	; 61
     b64:	99 e4       	ldi	r25, 0x49	; 73
     b66:	21 50       	subi	r18, 0x01	; 1
     b68:	80 40       	sbci	r24, 0x00	; 0
     b6a:	90 40       	sbci	r25, 0x00	; 0
     b6c:	e1 f7       	brne	.-8      	; 0xb66 <__stack+0x307>
     b6e:	00 c0       	rjmp	.+0      	; 0xb70 <__stack+0x311>
     b70:	00 00       	nop
     b72:	d1 cf       	rjmp	.-94     	; 0xb16 <__stack+0x2b7>
									}
								}
								
							}

							else if (a == '2')
     b74:	82 33       	cpi	r24, 0x32	; 50
     b76:	79 f6       	brne	.-98     	; 0xb16 <__stack+0x2b7>
							{
								increase_tempurature_manually();
     b78:	0e 94 96 03 	call	0x72c	; 0x72c <increase_tempurature_manually>
								buzzer();
     b7c:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
								LCD_Clear();
     b80:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
								LCD_Command(0x80);
     b84:	80 e8       	ldi	r24, 0x80	; 128
     b86:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
								LCD_String("Press 1 :");
     b8a:	84 e8       	ldi	r24, 0x84	; 132
     b8c:	91 e0       	ldi	r25, 0x01	; 1
     b8e:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
								LCD_Command(0xc1);
     b92:	81 ec       	ldi	r24, 0xC1	; 193
     b94:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
								LCD_String("To open valve");
     b98:	8e e8       	ldi	r24, 0x8E	; 142
     b9a:	91 e0       	ldi	r25, 0x01	; 1
     b9c:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
								while (1)
								{
									a = keyfind();
     ba0:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
									if (a == '1')
     ba4:	81 33       	cpi	r24, 0x31	; 49
     ba6:	e1 f7       	brne	.-8      	; 0xba0 <__stack+0x341>
									{
										buzzer();
     ba8:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
										valve2();
     bac:	0e 94 42 03 	call	0x684	; 0x684 <valve2>
										LCD_Clear();
     bb0:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
										LCD_Command(0x80);
     bb4:	80 e8       	ldi	r24, 0x80	; 128
     bb6:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
										LCD_String("Valve is open");
     bba:	87 eb       	ldi	r24, 0xB7	; 183
     bbc:	91 e0       	ldi	r25, 0x01	; 1
     bbe:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
										LCD_Command(0xc1);
     bc2:	81 ec       	ldi	r24, 0xC1	; 193
     bc4:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
										LCD_String("press2:close valve");
     bc8:	85 ec       	ldi	r24, 0xC5	; 197
     bca:	91 e0       	ldi	r25, 0x01	; 1
     bcc:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>

										while (1)
										{
											a = keyfind();
     bd0:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
											if (a == '2')
     bd4:	82 33       	cpi	r24, 0x32	; 50
     bd6:	e1 f7       	brne	.-8      	; 0xbd0 <__stack+0x371>
											{
												valve2();
     bd8:	0e 94 42 03 	call	0x684	; 0x684 <valve2>
												LCD_Clear();
     bdc:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
												LCD_Command(0x80);
     be0:	80 e8       	ldi	r24, 0x80	; 128
     be2:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
												LCD_String("Thank You");
     be6:	88 ed       	ldi	r24, 0xD8	; 216
     be8:	91 e0       	ldi	r25, 0x01	; 1
     bea:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     bee:	2f ef       	ldi	r18, 0xFF	; 255
     bf0:	8d e3       	ldi	r24, 0x3D	; 61
     bf2:	99 e4       	ldi	r25, 0x49	; 73
     bf4:	21 50       	subi	r18, 0x01	; 1
     bf6:	80 40       	sbci	r24, 0x00	; 0
     bf8:	90 40       	sbci	r25, 0x00	; 0
     bfa:	e1 f7       	brne	.-8      	; 0xbf4 <__stack+0x395>
     bfc:	00 c0       	rjmp	.+0      	; 0xbfe <__stack+0x39f>
     bfe:	00 00       	nop
     c00:	8a cf       	rjmp	.-236    	; 0xb16 <__stack+0x2b7>
					}
					
				}
			}

			if (a == '2')
     c02:	82 33       	cpi	r24, 0x32	; 50
     c04:	09 f0       	breq	.+2      	; 0xc08 <__stack+0x3a9>
     c06:	fe ce       	rjmp	.-516    	; 0xa04 <__stack+0x1a5>
			{
				LCD_Clear();
     c08:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
				LCD_Command(0x80);
     c0c:	80 e8       	ldi	r24, 0x80	; 128
     c0e:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
				LCD_String("jaggery creating");
     c12:	82 ee       	ldi	r24, 0xE2	; 226
     c14:	91 e0       	ldi	r25, 0x01	; 1
     c16:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
				heater();
     c1a:	0e 94 64 03 	call	0x6c8	; 0x6c8 <heater>
				valve1();
     c1e:	0e 94 31 03 	call	0x662	; 0x662 <valve1>
				while (1)
				{
					stepper_1_time();
     c22:	0e 94 08 02 	call	0x410	; 0x410 <stepper_1_time>
					Temperature = measure_tempurature();
     c26:	0e 94 42 02 	call	0x484	; 0x484 <measure_tempurature>
     c2a:	60 93 11 02 	sts	0x0211, r22	; 0x800211 <Temperature>
     c2e:	70 93 12 02 	sts	0x0212, r23	; 0x800212 <Temperature+0x1>
     c32:	80 93 13 02 	sts	0x0213, r24	; 0x800213 <Temperature+0x2>
     c36:	90 93 14 02 	sts	0x0214, r25	; 0x800214 <Temperature+0x3>
					dtostrf(Temperature, 3, 2, array);
     c3a:	0d e7       	ldi	r16, 0x7D	; 125
     c3c:	12 e0       	ldi	r17, 0x02	; 2
     c3e:	22 e0       	ldi	r18, 0x02	; 2
     c40:	43 e0       	ldi	r20, 0x03	; 3
     c42:	0e 94 06 09 	call	0x120c	; 0x120c <dtostrf>
					LCD_Clear();
     c46:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>

					if (Temperature > 250)
     c4a:	60 91 11 02 	lds	r22, 0x0211	; 0x800211 <Temperature>
     c4e:	70 91 12 02 	lds	r23, 0x0212	; 0x800212 <Temperature+0x1>
     c52:	80 91 13 02 	lds	r24, 0x0213	; 0x800213 <Temperature+0x2>
     c56:	90 91 14 02 	lds	r25, 0x0214	; 0x800214 <Temperature+0x3>
     c5a:	20 e0       	ldi	r18, 0x00	; 0
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	4a e7       	ldi	r20, 0x7A	; 122
     c60:	53 e4       	ldi	r21, 0x43	; 67
     c62:	0e 94 94 08 	call	0x1128	; 0x1128 <__gesf2>
     c66:	18 16       	cp	r1, r24
     c68:	b4 f4       	brge	.+44     	; 0xc96 <__stack+0x437>
					{
						heater();
     c6a:	0e 94 64 03 	call	0x6c8	; 0x6c8 <heater>
						LCD_String("jaggery created");
     c6e:	83 ef       	ldi	r24, 0xF3	; 243
     c70:	91 e0       	ldi	r25, 0x01	; 1
     c72:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
						break;
					}
					LCD_String(array);
				}

				buzzer();
     c76:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
				LCD_Clear();
     c7a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
				LCD_String("press 1 to");
     c7e:	80 e7       	ldi	r24, 0x70	; 112
     c80:	91 e0       	ldi	r25, 0x01	; 1
     c82:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
				LCD_Command(0xc1);
     c86:	81 ec       	ldi	r24, 0xC1	; 193
     c88:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
				LCD_String("continue");
     c8c:	8b e7       	ldi	r24, 0x7B	; 123
     c8e:	91 e0       	ldi	r25, 0x01	; 1
     c90:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     c94:	05 c0       	rjmp	.+10     	; 0xca0 <__stack+0x441>
					{
						heater();
						LCD_String("jaggery created");
						break;
					}
					LCD_String(array);
     c96:	8d e7       	ldi	r24, 0x7D	; 125
     c98:	92 e0       	ldi	r25, 0x02	; 2
     c9a:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
				}
     c9e:	c1 cf       	rjmp	.-126    	; 0xc22 <__stack+0x3c3>

				

				while (1)
				{
					a = keyfind();
     ca0:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
					if (a == '1')
     ca4:	81 33       	cpi	r24, 0x31	; 49
     ca6:	e1 f7       	brne	.-8      	; 0xca0 <__stack+0x441>
					{
						buzzer();
     ca8:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
						LCD_Clear();
     cac:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
						LCD_Command(0x80);
     cb0:	80 e8       	ldi	r24, 0x80	; 128
     cb2:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
						LCD_String("Press 1 :");
     cb6:	84 e8       	ldi	r24, 0x84	; 132
     cb8:	91 e0       	ldi	r25, 0x01	; 1
     cba:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
						LCD_Command(0xc1);
     cbe:	81 ec       	ldi	r24, 0xC1	; 193
     cc0:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
						LCD_String("To open valve");
     cc4:	8e e8       	ldi	r24, 0x8E	; 142
     cc6:	91 e0       	ldi	r25, 0x01	; 1
     cc8:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     ccc:	2f ef       	ldi	r18, 0xFF	; 255
     cce:	8d e3       	ldi	r24, 0x3D	; 61
     cd0:	99 e4       	ldi	r25, 0x49	; 73
     cd2:	21 50       	subi	r18, 0x01	; 1
     cd4:	80 40       	sbci	r24, 0x00	; 0
     cd6:	90 40       	sbci	r25, 0x00	; 0
     cd8:	e1 f7       	brne	.-8      	; 0xcd2 <__stack+0x473>
     cda:	00 c0       	rjmp	.+0      	; 0xcdc <__stack+0x47d>
     cdc:	00 00       	nop
						_delay_ms(3000);
						LCD_Clear();
     cde:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
						LCD_Command(0x80);
     ce2:	80 e8       	ldi	r24, 0x80	; 128
     ce4:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
						LCD_String("Press 2 :");
     ce8:	8c e9       	ldi	r24, 0x9C	; 156
     cea:	91 e0       	ldi	r25, 0x01	; 1
     cec:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
						LCD_Command(0xc1);
     cf0:	81 ec       	ldi	r24, 0xC1	; 193
     cf2:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
						LCD_String("To increase temp");
     cf6:	86 ea       	ldi	r24, 0xA6	; 166
     cf8:	91 e0       	ldi	r25, 0x01	; 1
     cfa:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     cfe:	2f ef       	ldi	r18, 0xFF	; 255
     d00:	8d e3       	ldi	r24, 0x3D	; 61
     d02:	99 e4       	ldi	r25, 0x49	; 73
     d04:	21 50       	subi	r18, 0x01	; 1
     d06:	80 40       	sbci	r24, 0x00	; 0
     d08:	90 40       	sbci	r25, 0x00	; 0
     d0a:	e1 f7       	brne	.-8      	; 0xd04 <__stack+0x4a5>
     d0c:	00 c0       	rjmp	.+0      	; 0xd0e <__stack+0x4af>
     d0e:	00 00       	nop
						_delay_ms(3000);

						while (1)
						{
							a = keyfind();
     d10:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
							if (a == '1')
     d14:	81 33       	cpi	r24, 0x31	; 49
     d16:	59 f5       	brne	.+86     	; 0xd6e <__stack+0x50f>
							{
								valve3();
     d18:	0e 94 53 03 	call	0x6a6	; 0x6a6 <valve3>
								LCD_Clear();
     d1c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
								LCD_Command(0x80);
     d20:	80 e8       	ldi	r24, 0x80	; 128
     d22:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
								LCD_String("Valve is open");
     d26:	87 eb       	ldi	r24, 0xB7	; 183
     d28:	91 e0       	ldi	r25, 0x01	; 1
     d2a:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
								LCD_Command(0xc1);
     d2e:	81 ec       	ldi	r24, 0xC1	; 193
     d30:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
								LCD_String("press2:close valve");
     d34:	85 ec       	ldi	r24, 0xC5	; 197
     d36:	91 e0       	ldi	r25, 0x01	; 1
     d38:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>

								while (1)
								{
									a = keyfind();
     d3c:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
									if (a == '2')
     d40:	82 33       	cpi	r24, 0x32	; 50
     d42:	e1 f7       	brne	.-8      	; 0xd3c <__stack+0x4dd>
									{
										valve3();
     d44:	0e 94 53 03 	call	0x6a6	; 0x6a6 <valve3>
										LCD_Clear();
     d48:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
										LCD_Command(0x80);
     d4c:	80 e8       	ldi	r24, 0x80	; 128
     d4e:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
										LCD_String("Thank You");
     d52:	88 ed       	ldi	r24, 0xD8	; 216
     d54:	91 e0       	ldi	r25, 0x01	; 1
     d56:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     d5a:	2f ef       	ldi	r18, 0xFF	; 255
     d5c:	8d e3       	ldi	r24, 0x3D	; 61
     d5e:	99 e4       	ldi	r25, 0x49	; 73
     d60:	21 50       	subi	r18, 0x01	; 1
     d62:	80 40       	sbci	r24, 0x00	; 0
     d64:	90 40       	sbci	r25, 0x00	; 0
     d66:	e1 f7       	brne	.-8      	; 0xd60 <__stack+0x501>
     d68:	00 c0       	rjmp	.+0      	; 0xd6a <__stack+0x50b>
     d6a:	00 00       	nop
     d6c:	d1 cf       	rjmp	.-94     	; 0xd10 <__stack+0x4b1>
									}
								}
								
							}

							else if (a == '2')
     d6e:	82 33       	cpi	r24, 0x32	; 50
     d70:	79 f6       	brne	.-98     	; 0xd10 <__stack+0x4b1>
							{
								increase_tempurature_manually();
     d72:	0e 94 96 03 	call	0x72c	; 0x72c <increase_tempurature_manually>
								buzzer();
     d76:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
								LCD_Clear();
     d7a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
								LCD_Command(0x80);
     d7e:	80 e8       	ldi	r24, 0x80	; 128
     d80:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
								LCD_String("Press 1 :");
     d84:	84 e8       	ldi	r24, 0x84	; 132
     d86:	91 e0       	ldi	r25, 0x01	; 1
     d88:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
								LCD_Command(0xc1);
     d8c:	81 ec       	ldi	r24, 0xC1	; 193
     d8e:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
								LCD_String("To open valve");
     d92:	8e e8       	ldi	r24, 0x8E	; 142
     d94:	91 e0       	ldi	r25, 0x01	; 1
     d96:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
								while (1)
								{
									a = keyfind();
     d9a:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
									if (a == '1')
     d9e:	81 33       	cpi	r24, 0x31	; 49
     da0:	e1 f7       	brne	.-8      	; 0xd9a <__stack+0x53b>
									{
										buzzer();
     da2:	0e 94 75 03 	call	0x6ea	; 0x6ea <buzzer>
										valve3();
     da6:	0e 94 53 03 	call	0x6a6	; 0x6a6 <valve3>
										LCD_Clear();
     daa:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
										LCD_Command(0x80);
     dae:	80 e8       	ldi	r24, 0x80	; 128
     db0:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
										LCD_String("Valve is open");
     db4:	87 eb       	ldi	r24, 0xB7	; 183
     db6:	91 e0       	ldi	r25, 0x01	; 1
     db8:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
										LCD_Command(0xc1);
     dbc:	81 ec       	ldi	r24, 0xC1	; 193
     dbe:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
										LCD_String("press2:close valve");
     dc2:	85 ec       	ldi	r24, 0xC5	; 197
     dc4:	91 e0       	ldi	r25, 0x01	; 1
     dc6:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>

										while (1)
										{
											a = keyfind();
     dca:	0e 94 78 01 	call	0x2f0	; 0x2f0 <keyfind>
											if (a == '2')
     dce:	82 33       	cpi	r24, 0x32	; 50
     dd0:	e1 f7       	brne	.-8      	; 0xdca <__stack+0x56b>
											{
												valve3();
     dd2:	0e 94 53 03 	call	0x6a6	; 0x6a6 <valve3>
												LCD_Clear();
     dd6:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <LCD_Clear>
												LCD_Command(0x80);
     dda:	80 e8       	ldi	r24, 0x80	; 128
     ddc:	0e 94 cb 00 	call	0x196	; 0x196 <LCD_Command>
												LCD_String("Thank You");
     de0:	88 ed       	ldi	r24, 0xD8	; 216
     de2:	91 e0       	ldi	r25, 0x01	; 1
     de4:	0e 94 55 01 	call	0x2aa	; 0x2aa <LCD_String>
     de8:	2f ef       	ldi	r18, 0xFF	; 255
     dea:	8d e3       	ldi	r24, 0x3D	; 61
     dec:	99 e4       	ldi	r25, 0x49	; 73
     dee:	21 50       	subi	r18, 0x01	; 1
     df0:	80 40       	sbci	r24, 0x00	; 0
     df2:	90 40       	sbci	r25, 0x00	; 0
     df4:	e1 f7       	brne	.-8      	; 0xdee <__stack+0x58f>
     df6:	00 c0       	rjmp	.+0      	; 0xdf8 <__stack+0x599>
     df8:	00 00       	nop
     dfa:	8a cf       	rjmp	.-236    	; 0xd10 <__stack+0x4b1>

00000dfc <__subsf3>:
     dfc:	50 58       	subi	r21, 0x80	; 128

00000dfe <__addsf3>:
     dfe:	bb 27       	eor	r27, r27
     e00:	aa 27       	eor	r26, r26
     e02:	0e 94 16 07 	call	0xe2c	; 0xe2c <__addsf3x>
     e06:	0c 94 5a 08 	jmp	0x10b4	; 0x10b4 <__fp_round>
     e0a:	0e 94 4c 08 	call	0x1098	; 0x1098 <__fp_pscA>
     e0e:	38 f0       	brcs	.+14     	; 0xe1e <__addsf3+0x20>
     e10:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__fp_pscB>
     e14:	20 f0       	brcs	.+8      	; 0xe1e <__addsf3+0x20>
     e16:	39 f4       	brne	.+14     	; 0xe26 <__addsf3+0x28>
     e18:	9f 3f       	cpi	r25, 0xFF	; 255
     e1a:	19 f4       	brne	.+6      	; 0xe22 <__addsf3+0x24>
     e1c:	26 f4       	brtc	.+8      	; 0xe26 <__addsf3+0x28>
     e1e:	0c 94 49 08 	jmp	0x1092	; 0x1092 <__fp_nan>
     e22:	0e f4       	brtc	.+2      	; 0xe26 <__addsf3+0x28>
     e24:	e0 95       	com	r30
     e26:	e7 fb       	bst	r30, 7
     e28:	0c 94 43 08 	jmp	0x1086	; 0x1086 <__fp_inf>

00000e2c <__addsf3x>:
     e2c:	e9 2f       	mov	r30, r25
     e2e:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__fp_split3>
     e32:	58 f3       	brcs	.-42     	; 0xe0a <__addsf3+0xc>
     e34:	ba 17       	cp	r27, r26
     e36:	62 07       	cpc	r22, r18
     e38:	73 07       	cpc	r23, r19
     e3a:	84 07       	cpc	r24, r20
     e3c:	95 07       	cpc	r25, r21
     e3e:	20 f0       	brcs	.+8      	; 0xe48 <__addsf3x+0x1c>
     e40:	79 f4       	brne	.+30     	; 0xe60 <__addsf3x+0x34>
     e42:	a6 f5       	brtc	.+104    	; 0xeac <__addsf3x+0x80>
     e44:	0c 94 8d 08 	jmp	0x111a	; 0x111a <__fp_zero>
     e48:	0e f4       	brtc	.+2      	; 0xe4c <__addsf3x+0x20>
     e4a:	e0 95       	com	r30
     e4c:	0b 2e       	mov	r0, r27
     e4e:	ba 2f       	mov	r27, r26
     e50:	a0 2d       	mov	r26, r0
     e52:	0b 01       	movw	r0, r22
     e54:	b9 01       	movw	r22, r18
     e56:	90 01       	movw	r18, r0
     e58:	0c 01       	movw	r0, r24
     e5a:	ca 01       	movw	r24, r20
     e5c:	a0 01       	movw	r20, r0
     e5e:	11 24       	eor	r1, r1
     e60:	ff 27       	eor	r31, r31
     e62:	59 1b       	sub	r21, r25
     e64:	99 f0       	breq	.+38     	; 0xe8c <__addsf3x+0x60>
     e66:	59 3f       	cpi	r21, 0xF9	; 249
     e68:	50 f4       	brcc	.+20     	; 0xe7e <__addsf3x+0x52>
     e6a:	50 3e       	cpi	r21, 0xE0	; 224
     e6c:	68 f1       	brcs	.+90     	; 0xec8 <__addsf3x+0x9c>
     e6e:	1a 16       	cp	r1, r26
     e70:	f0 40       	sbci	r31, 0x00	; 0
     e72:	a2 2f       	mov	r26, r18
     e74:	23 2f       	mov	r18, r19
     e76:	34 2f       	mov	r19, r20
     e78:	44 27       	eor	r20, r20
     e7a:	58 5f       	subi	r21, 0xF8	; 248
     e7c:	f3 cf       	rjmp	.-26     	; 0xe64 <__addsf3x+0x38>
     e7e:	46 95       	lsr	r20
     e80:	37 95       	ror	r19
     e82:	27 95       	ror	r18
     e84:	a7 95       	ror	r26
     e86:	f0 40       	sbci	r31, 0x00	; 0
     e88:	53 95       	inc	r21
     e8a:	c9 f7       	brne	.-14     	; 0xe7e <__addsf3x+0x52>
     e8c:	7e f4       	brtc	.+30     	; 0xeac <__addsf3x+0x80>
     e8e:	1f 16       	cp	r1, r31
     e90:	ba 0b       	sbc	r27, r26
     e92:	62 0b       	sbc	r22, r18
     e94:	73 0b       	sbc	r23, r19
     e96:	84 0b       	sbc	r24, r20
     e98:	ba f0       	brmi	.+46     	; 0xec8 <__addsf3x+0x9c>
     e9a:	91 50       	subi	r25, 0x01	; 1
     e9c:	a1 f0       	breq	.+40     	; 0xec6 <__addsf3x+0x9a>
     e9e:	ff 0f       	add	r31, r31
     ea0:	bb 1f       	adc	r27, r27
     ea2:	66 1f       	adc	r22, r22
     ea4:	77 1f       	adc	r23, r23
     ea6:	88 1f       	adc	r24, r24
     ea8:	c2 f7       	brpl	.-16     	; 0xe9a <__addsf3x+0x6e>
     eaa:	0e c0       	rjmp	.+28     	; 0xec8 <__addsf3x+0x9c>
     eac:	ba 0f       	add	r27, r26
     eae:	62 1f       	adc	r22, r18
     eb0:	73 1f       	adc	r23, r19
     eb2:	84 1f       	adc	r24, r20
     eb4:	48 f4       	brcc	.+18     	; 0xec8 <__addsf3x+0x9c>
     eb6:	87 95       	ror	r24
     eb8:	77 95       	ror	r23
     eba:	67 95       	ror	r22
     ebc:	b7 95       	ror	r27
     ebe:	f7 95       	ror	r31
     ec0:	9e 3f       	cpi	r25, 0xFE	; 254
     ec2:	08 f0       	brcs	.+2      	; 0xec6 <__addsf3x+0x9a>
     ec4:	b0 cf       	rjmp	.-160    	; 0xe26 <__addsf3+0x28>
     ec6:	93 95       	inc	r25
     ec8:	88 0f       	add	r24, r24
     eca:	08 f0       	brcs	.+2      	; 0xece <__addsf3x+0xa2>
     ecc:	99 27       	eor	r25, r25
     ece:	ee 0f       	add	r30, r30
     ed0:	97 95       	ror	r25
     ed2:	87 95       	ror	r24
     ed4:	08 95       	ret

00000ed6 <__cmpsf2>:
     ed6:	0e 94 1f 08 	call	0x103e	; 0x103e <__fp_cmp>
     eda:	08 f4       	brcc	.+2      	; 0xede <__cmpsf2+0x8>
     edc:	81 e0       	ldi	r24, 0x01	; 1
     ede:	08 95       	ret

00000ee0 <__divsf3>:
     ee0:	0e 94 84 07 	call	0xf08	; 0xf08 <__divsf3x>
     ee4:	0c 94 5a 08 	jmp	0x10b4	; 0x10b4 <__fp_round>
     ee8:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__fp_pscB>
     eec:	58 f0       	brcs	.+22     	; 0xf04 <__divsf3+0x24>
     eee:	0e 94 4c 08 	call	0x1098	; 0x1098 <__fp_pscA>
     ef2:	40 f0       	brcs	.+16     	; 0xf04 <__divsf3+0x24>
     ef4:	29 f4       	brne	.+10     	; 0xf00 <__divsf3+0x20>
     ef6:	5f 3f       	cpi	r21, 0xFF	; 255
     ef8:	29 f0       	breq	.+10     	; 0xf04 <__divsf3+0x24>
     efa:	0c 94 43 08 	jmp	0x1086	; 0x1086 <__fp_inf>
     efe:	51 11       	cpse	r21, r1
     f00:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__fp_szero>
     f04:	0c 94 49 08 	jmp	0x1092	; 0x1092 <__fp_nan>

00000f08 <__divsf3x>:
     f08:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__fp_split3>
     f0c:	68 f3       	brcs	.-38     	; 0xee8 <__divsf3+0x8>

00000f0e <__divsf3_pse>:
     f0e:	99 23       	and	r25, r25
     f10:	b1 f3       	breq	.-20     	; 0xefe <__divsf3+0x1e>
     f12:	55 23       	and	r21, r21
     f14:	91 f3       	breq	.-28     	; 0xefa <__divsf3+0x1a>
     f16:	95 1b       	sub	r25, r21
     f18:	55 0b       	sbc	r21, r21
     f1a:	bb 27       	eor	r27, r27
     f1c:	aa 27       	eor	r26, r26
     f1e:	62 17       	cp	r22, r18
     f20:	73 07       	cpc	r23, r19
     f22:	84 07       	cpc	r24, r20
     f24:	38 f0       	brcs	.+14     	; 0xf34 <__divsf3_pse+0x26>
     f26:	9f 5f       	subi	r25, 0xFF	; 255
     f28:	5f 4f       	sbci	r21, 0xFF	; 255
     f2a:	22 0f       	add	r18, r18
     f2c:	33 1f       	adc	r19, r19
     f2e:	44 1f       	adc	r20, r20
     f30:	aa 1f       	adc	r26, r26
     f32:	a9 f3       	breq	.-22     	; 0xf1e <__divsf3_pse+0x10>
     f34:	35 d0       	rcall	.+106    	; 0xfa0 <__divsf3_pse+0x92>
     f36:	0e 2e       	mov	r0, r30
     f38:	3a f0       	brmi	.+14     	; 0xf48 <__divsf3_pse+0x3a>
     f3a:	e0 e8       	ldi	r30, 0x80	; 128
     f3c:	32 d0       	rcall	.+100    	; 0xfa2 <__divsf3_pse+0x94>
     f3e:	91 50       	subi	r25, 0x01	; 1
     f40:	50 40       	sbci	r21, 0x00	; 0
     f42:	e6 95       	lsr	r30
     f44:	00 1c       	adc	r0, r0
     f46:	ca f7       	brpl	.-14     	; 0xf3a <__divsf3_pse+0x2c>
     f48:	2b d0       	rcall	.+86     	; 0xfa0 <__divsf3_pse+0x92>
     f4a:	fe 2f       	mov	r31, r30
     f4c:	29 d0       	rcall	.+82     	; 0xfa0 <__divsf3_pse+0x92>
     f4e:	66 0f       	add	r22, r22
     f50:	77 1f       	adc	r23, r23
     f52:	88 1f       	adc	r24, r24
     f54:	bb 1f       	adc	r27, r27
     f56:	26 17       	cp	r18, r22
     f58:	37 07       	cpc	r19, r23
     f5a:	48 07       	cpc	r20, r24
     f5c:	ab 07       	cpc	r26, r27
     f5e:	b0 e8       	ldi	r27, 0x80	; 128
     f60:	09 f0       	breq	.+2      	; 0xf64 <__divsf3_pse+0x56>
     f62:	bb 0b       	sbc	r27, r27
     f64:	80 2d       	mov	r24, r0
     f66:	bf 01       	movw	r22, r30
     f68:	ff 27       	eor	r31, r31
     f6a:	93 58       	subi	r25, 0x83	; 131
     f6c:	5f 4f       	sbci	r21, 0xFF	; 255
     f6e:	3a f0       	brmi	.+14     	; 0xf7e <__divsf3_pse+0x70>
     f70:	9e 3f       	cpi	r25, 0xFE	; 254
     f72:	51 05       	cpc	r21, r1
     f74:	78 f0       	brcs	.+30     	; 0xf94 <__divsf3_pse+0x86>
     f76:	0c 94 43 08 	jmp	0x1086	; 0x1086 <__fp_inf>
     f7a:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__fp_szero>
     f7e:	5f 3f       	cpi	r21, 0xFF	; 255
     f80:	e4 f3       	brlt	.-8      	; 0xf7a <__divsf3_pse+0x6c>
     f82:	98 3e       	cpi	r25, 0xE8	; 232
     f84:	d4 f3       	brlt	.-12     	; 0xf7a <__divsf3_pse+0x6c>
     f86:	86 95       	lsr	r24
     f88:	77 95       	ror	r23
     f8a:	67 95       	ror	r22
     f8c:	b7 95       	ror	r27
     f8e:	f7 95       	ror	r31
     f90:	9f 5f       	subi	r25, 0xFF	; 255
     f92:	c9 f7       	brne	.-14     	; 0xf86 <__divsf3_pse+0x78>
     f94:	88 0f       	add	r24, r24
     f96:	91 1d       	adc	r25, r1
     f98:	96 95       	lsr	r25
     f9a:	87 95       	ror	r24
     f9c:	97 f9       	bld	r25, 7
     f9e:	08 95       	ret
     fa0:	e1 e0       	ldi	r30, 0x01	; 1
     fa2:	66 0f       	add	r22, r22
     fa4:	77 1f       	adc	r23, r23
     fa6:	88 1f       	adc	r24, r24
     fa8:	bb 1f       	adc	r27, r27
     faa:	62 17       	cp	r22, r18
     fac:	73 07       	cpc	r23, r19
     fae:	84 07       	cpc	r24, r20
     fb0:	ba 07       	cpc	r27, r26
     fb2:	20 f0       	brcs	.+8      	; 0xfbc <__divsf3_pse+0xae>
     fb4:	62 1b       	sub	r22, r18
     fb6:	73 0b       	sbc	r23, r19
     fb8:	84 0b       	sbc	r24, r20
     fba:	ba 0b       	sbc	r27, r26
     fbc:	ee 1f       	adc	r30, r30
     fbe:	88 f7       	brcc	.-30     	; 0xfa2 <__divsf3_pse+0x94>
     fc0:	e0 95       	com	r30
     fc2:	08 95       	ret

00000fc4 <__floatunsisf>:
     fc4:	e8 94       	clt
     fc6:	09 c0       	rjmp	.+18     	; 0xfda <__floatsisf+0x12>

00000fc8 <__floatsisf>:
     fc8:	97 fb       	bst	r25, 7
     fca:	3e f4       	brtc	.+14     	; 0xfda <__floatsisf+0x12>
     fcc:	90 95       	com	r25
     fce:	80 95       	com	r24
     fd0:	70 95       	com	r23
     fd2:	61 95       	neg	r22
     fd4:	7f 4f       	sbci	r23, 0xFF	; 255
     fd6:	8f 4f       	sbci	r24, 0xFF	; 255
     fd8:	9f 4f       	sbci	r25, 0xFF	; 255
     fda:	99 23       	and	r25, r25
     fdc:	a9 f0       	breq	.+42     	; 0x1008 <__floatsisf+0x40>
     fde:	f9 2f       	mov	r31, r25
     fe0:	96 e9       	ldi	r25, 0x96	; 150
     fe2:	bb 27       	eor	r27, r27
     fe4:	93 95       	inc	r25
     fe6:	f6 95       	lsr	r31
     fe8:	87 95       	ror	r24
     fea:	77 95       	ror	r23
     fec:	67 95       	ror	r22
     fee:	b7 95       	ror	r27
     ff0:	f1 11       	cpse	r31, r1
     ff2:	f8 cf       	rjmp	.-16     	; 0xfe4 <__floatsisf+0x1c>
     ff4:	fa f4       	brpl	.+62     	; 0x1034 <__floatsisf+0x6c>
     ff6:	bb 0f       	add	r27, r27
     ff8:	11 f4       	brne	.+4      	; 0xffe <__floatsisf+0x36>
     ffa:	60 ff       	sbrs	r22, 0
     ffc:	1b c0       	rjmp	.+54     	; 0x1034 <__floatsisf+0x6c>
     ffe:	6f 5f       	subi	r22, 0xFF	; 255
    1000:	7f 4f       	sbci	r23, 0xFF	; 255
    1002:	8f 4f       	sbci	r24, 0xFF	; 255
    1004:	9f 4f       	sbci	r25, 0xFF	; 255
    1006:	16 c0       	rjmp	.+44     	; 0x1034 <__floatsisf+0x6c>
    1008:	88 23       	and	r24, r24
    100a:	11 f0       	breq	.+4      	; 0x1010 <__floatsisf+0x48>
    100c:	96 e9       	ldi	r25, 0x96	; 150
    100e:	11 c0       	rjmp	.+34     	; 0x1032 <__floatsisf+0x6a>
    1010:	77 23       	and	r23, r23
    1012:	21 f0       	breq	.+8      	; 0x101c <__floatsisf+0x54>
    1014:	9e e8       	ldi	r25, 0x8E	; 142
    1016:	87 2f       	mov	r24, r23
    1018:	76 2f       	mov	r23, r22
    101a:	05 c0       	rjmp	.+10     	; 0x1026 <__floatsisf+0x5e>
    101c:	66 23       	and	r22, r22
    101e:	71 f0       	breq	.+28     	; 0x103c <__floatsisf+0x74>
    1020:	96 e8       	ldi	r25, 0x86	; 134
    1022:	86 2f       	mov	r24, r22
    1024:	70 e0       	ldi	r23, 0x00	; 0
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	2a f0       	brmi	.+10     	; 0x1034 <__floatsisf+0x6c>
    102a:	9a 95       	dec	r25
    102c:	66 0f       	add	r22, r22
    102e:	77 1f       	adc	r23, r23
    1030:	88 1f       	adc	r24, r24
    1032:	da f7       	brpl	.-10     	; 0x102a <__floatsisf+0x62>
    1034:	88 0f       	add	r24, r24
    1036:	96 95       	lsr	r25
    1038:	87 95       	ror	r24
    103a:	97 f9       	bld	r25, 7
    103c:	08 95       	ret

0000103e <__fp_cmp>:
    103e:	99 0f       	add	r25, r25
    1040:	00 08       	sbc	r0, r0
    1042:	55 0f       	add	r21, r21
    1044:	aa 0b       	sbc	r26, r26
    1046:	e0 e8       	ldi	r30, 0x80	; 128
    1048:	fe ef       	ldi	r31, 0xFE	; 254
    104a:	16 16       	cp	r1, r22
    104c:	17 06       	cpc	r1, r23
    104e:	e8 07       	cpc	r30, r24
    1050:	f9 07       	cpc	r31, r25
    1052:	c0 f0       	brcs	.+48     	; 0x1084 <__fp_cmp+0x46>
    1054:	12 16       	cp	r1, r18
    1056:	13 06       	cpc	r1, r19
    1058:	e4 07       	cpc	r30, r20
    105a:	f5 07       	cpc	r31, r21
    105c:	98 f0       	brcs	.+38     	; 0x1084 <__fp_cmp+0x46>
    105e:	62 1b       	sub	r22, r18
    1060:	73 0b       	sbc	r23, r19
    1062:	84 0b       	sbc	r24, r20
    1064:	95 0b       	sbc	r25, r21
    1066:	39 f4       	brne	.+14     	; 0x1076 <__fp_cmp+0x38>
    1068:	0a 26       	eor	r0, r26
    106a:	61 f0       	breq	.+24     	; 0x1084 <__fp_cmp+0x46>
    106c:	23 2b       	or	r18, r19
    106e:	24 2b       	or	r18, r20
    1070:	25 2b       	or	r18, r21
    1072:	21 f4       	brne	.+8      	; 0x107c <__fp_cmp+0x3e>
    1074:	08 95       	ret
    1076:	0a 26       	eor	r0, r26
    1078:	09 f4       	brne	.+2      	; 0x107c <__fp_cmp+0x3e>
    107a:	a1 40       	sbci	r26, 0x01	; 1
    107c:	a6 95       	lsr	r26
    107e:	8f ef       	ldi	r24, 0xFF	; 255
    1080:	81 1d       	adc	r24, r1
    1082:	81 1d       	adc	r24, r1
    1084:	08 95       	ret

00001086 <__fp_inf>:
    1086:	97 f9       	bld	r25, 7
    1088:	9f 67       	ori	r25, 0x7F	; 127
    108a:	80 e8       	ldi	r24, 0x80	; 128
    108c:	70 e0       	ldi	r23, 0x00	; 0
    108e:	60 e0       	ldi	r22, 0x00	; 0
    1090:	08 95       	ret

00001092 <__fp_nan>:
    1092:	9f ef       	ldi	r25, 0xFF	; 255
    1094:	80 ec       	ldi	r24, 0xC0	; 192
    1096:	08 95       	ret

00001098 <__fp_pscA>:
    1098:	00 24       	eor	r0, r0
    109a:	0a 94       	dec	r0
    109c:	16 16       	cp	r1, r22
    109e:	17 06       	cpc	r1, r23
    10a0:	18 06       	cpc	r1, r24
    10a2:	09 06       	cpc	r0, r25
    10a4:	08 95       	ret

000010a6 <__fp_pscB>:
    10a6:	00 24       	eor	r0, r0
    10a8:	0a 94       	dec	r0
    10aa:	12 16       	cp	r1, r18
    10ac:	13 06       	cpc	r1, r19
    10ae:	14 06       	cpc	r1, r20
    10b0:	05 06       	cpc	r0, r21
    10b2:	08 95       	ret

000010b4 <__fp_round>:
    10b4:	09 2e       	mov	r0, r25
    10b6:	03 94       	inc	r0
    10b8:	00 0c       	add	r0, r0
    10ba:	11 f4       	brne	.+4      	; 0x10c0 <__fp_round+0xc>
    10bc:	88 23       	and	r24, r24
    10be:	52 f0       	brmi	.+20     	; 0x10d4 <__fp_round+0x20>
    10c0:	bb 0f       	add	r27, r27
    10c2:	40 f4       	brcc	.+16     	; 0x10d4 <__fp_round+0x20>
    10c4:	bf 2b       	or	r27, r31
    10c6:	11 f4       	brne	.+4      	; 0x10cc <__fp_round+0x18>
    10c8:	60 ff       	sbrs	r22, 0
    10ca:	04 c0       	rjmp	.+8      	; 0x10d4 <__fp_round+0x20>
    10cc:	6f 5f       	subi	r22, 0xFF	; 255
    10ce:	7f 4f       	sbci	r23, 0xFF	; 255
    10d0:	8f 4f       	sbci	r24, 0xFF	; 255
    10d2:	9f 4f       	sbci	r25, 0xFF	; 255
    10d4:	08 95       	ret

000010d6 <__fp_split3>:
    10d6:	57 fd       	sbrc	r21, 7
    10d8:	90 58       	subi	r25, 0x80	; 128
    10da:	44 0f       	add	r20, r20
    10dc:	55 1f       	adc	r21, r21
    10de:	59 f0       	breq	.+22     	; 0x10f6 <__fp_splitA+0x10>
    10e0:	5f 3f       	cpi	r21, 0xFF	; 255
    10e2:	71 f0       	breq	.+28     	; 0x1100 <__fp_splitA+0x1a>
    10e4:	47 95       	ror	r20

000010e6 <__fp_splitA>:
    10e6:	88 0f       	add	r24, r24
    10e8:	97 fb       	bst	r25, 7
    10ea:	99 1f       	adc	r25, r25
    10ec:	61 f0       	breq	.+24     	; 0x1106 <__fp_splitA+0x20>
    10ee:	9f 3f       	cpi	r25, 0xFF	; 255
    10f0:	79 f0       	breq	.+30     	; 0x1110 <__fp_splitA+0x2a>
    10f2:	87 95       	ror	r24
    10f4:	08 95       	ret
    10f6:	12 16       	cp	r1, r18
    10f8:	13 06       	cpc	r1, r19
    10fa:	14 06       	cpc	r1, r20
    10fc:	55 1f       	adc	r21, r21
    10fe:	f2 cf       	rjmp	.-28     	; 0x10e4 <__fp_split3+0xe>
    1100:	46 95       	lsr	r20
    1102:	f1 df       	rcall	.-30     	; 0x10e6 <__fp_splitA>
    1104:	08 c0       	rjmp	.+16     	; 0x1116 <__fp_splitA+0x30>
    1106:	16 16       	cp	r1, r22
    1108:	17 06       	cpc	r1, r23
    110a:	18 06       	cpc	r1, r24
    110c:	99 1f       	adc	r25, r25
    110e:	f1 cf       	rjmp	.-30     	; 0x10f2 <__fp_splitA+0xc>
    1110:	86 95       	lsr	r24
    1112:	71 05       	cpc	r23, r1
    1114:	61 05       	cpc	r22, r1
    1116:	08 94       	sec
    1118:	08 95       	ret

0000111a <__fp_zero>:
    111a:	e8 94       	clt

0000111c <__fp_szero>:
    111c:	bb 27       	eor	r27, r27
    111e:	66 27       	eor	r22, r22
    1120:	77 27       	eor	r23, r23
    1122:	cb 01       	movw	r24, r22
    1124:	97 f9       	bld	r25, 7
    1126:	08 95       	ret

00001128 <__gesf2>:
    1128:	0e 94 1f 08 	call	0x103e	; 0x103e <__fp_cmp>
    112c:	08 f4       	brcc	.+2      	; 0x1130 <__gesf2+0x8>
    112e:	8f ef       	ldi	r24, 0xFF	; 255
    1130:	08 95       	ret

00001132 <__mulsf3>:
    1132:	0e 94 ac 08 	call	0x1158	; 0x1158 <__mulsf3x>
    1136:	0c 94 5a 08 	jmp	0x10b4	; 0x10b4 <__fp_round>
    113a:	0e 94 4c 08 	call	0x1098	; 0x1098 <__fp_pscA>
    113e:	38 f0       	brcs	.+14     	; 0x114e <__mulsf3+0x1c>
    1140:	0e 94 53 08 	call	0x10a6	; 0x10a6 <__fp_pscB>
    1144:	20 f0       	brcs	.+8      	; 0x114e <__mulsf3+0x1c>
    1146:	95 23       	and	r25, r21
    1148:	11 f0       	breq	.+4      	; 0x114e <__mulsf3+0x1c>
    114a:	0c 94 43 08 	jmp	0x1086	; 0x1086 <__fp_inf>
    114e:	0c 94 49 08 	jmp	0x1092	; 0x1092 <__fp_nan>
    1152:	11 24       	eor	r1, r1
    1154:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__fp_szero>

00001158 <__mulsf3x>:
    1158:	0e 94 6b 08 	call	0x10d6	; 0x10d6 <__fp_split3>
    115c:	70 f3       	brcs	.-36     	; 0x113a <__mulsf3+0x8>

0000115e <__mulsf3_pse>:
    115e:	95 9f       	mul	r25, r21
    1160:	c1 f3       	breq	.-16     	; 0x1152 <__mulsf3+0x20>
    1162:	95 0f       	add	r25, r21
    1164:	50 e0       	ldi	r21, 0x00	; 0
    1166:	55 1f       	adc	r21, r21
    1168:	62 9f       	mul	r22, r18
    116a:	f0 01       	movw	r30, r0
    116c:	72 9f       	mul	r23, r18
    116e:	bb 27       	eor	r27, r27
    1170:	f0 0d       	add	r31, r0
    1172:	b1 1d       	adc	r27, r1
    1174:	63 9f       	mul	r22, r19
    1176:	aa 27       	eor	r26, r26
    1178:	f0 0d       	add	r31, r0
    117a:	b1 1d       	adc	r27, r1
    117c:	aa 1f       	adc	r26, r26
    117e:	64 9f       	mul	r22, r20
    1180:	66 27       	eor	r22, r22
    1182:	b0 0d       	add	r27, r0
    1184:	a1 1d       	adc	r26, r1
    1186:	66 1f       	adc	r22, r22
    1188:	82 9f       	mul	r24, r18
    118a:	22 27       	eor	r18, r18
    118c:	b0 0d       	add	r27, r0
    118e:	a1 1d       	adc	r26, r1
    1190:	62 1f       	adc	r22, r18
    1192:	73 9f       	mul	r23, r19
    1194:	b0 0d       	add	r27, r0
    1196:	a1 1d       	adc	r26, r1
    1198:	62 1f       	adc	r22, r18
    119a:	83 9f       	mul	r24, r19
    119c:	a0 0d       	add	r26, r0
    119e:	61 1d       	adc	r22, r1
    11a0:	22 1f       	adc	r18, r18
    11a2:	74 9f       	mul	r23, r20
    11a4:	33 27       	eor	r19, r19
    11a6:	a0 0d       	add	r26, r0
    11a8:	61 1d       	adc	r22, r1
    11aa:	23 1f       	adc	r18, r19
    11ac:	84 9f       	mul	r24, r20
    11ae:	60 0d       	add	r22, r0
    11b0:	21 1d       	adc	r18, r1
    11b2:	82 2f       	mov	r24, r18
    11b4:	76 2f       	mov	r23, r22
    11b6:	6a 2f       	mov	r22, r26
    11b8:	11 24       	eor	r1, r1
    11ba:	9f 57       	subi	r25, 0x7F	; 127
    11bc:	50 40       	sbci	r21, 0x00	; 0
    11be:	9a f0       	brmi	.+38     	; 0x11e6 <__mulsf3_pse+0x88>
    11c0:	f1 f0       	breq	.+60     	; 0x11fe <__mulsf3_pse+0xa0>
    11c2:	88 23       	and	r24, r24
    11c4:	4a f0       	brmi	.+18     	; 0x11d8 <__mulsf3_pse+0x7a>
    11c6:	ee 0f       	add	r30, r30
    11c8:	ff 1f       	adc	r31, r31
    11ca:	bb 1f       	adc	r27, r27
    11cc:	66 1f       	adc	r22, r22
    11ce:	77 1f       	adc	r23, r23
    11d0:	88 1f       	adc	r24, r24
    11d2:	91 50       	subi	r25, 0x01	; 1
    11d4:	50 40       	sbci	r21, 0x00	; 0
    11d6:	a9 f7       	brne	.-22     	; 0x11c2 <__mulsf3_pse+0x64>
    11d8:	9e 3f       	cpi	r25, 0xFE	; 254
    11da:	51 05       	cpc	r21, r1
    11dc:	80 f0       	brcs	.+32     	; 0x11fe <__mulsf3_pse+0xa0>
    11de:	0c 94 43 08 	jmp	0x1086	; 0x1086 <__fp_inf>
    11e2:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__fp_szero>
    11e6:	5f 3f       	cpi	r21, 0xFF	; 255
    11e8:	e4 f3       	brlt	.-8      	; 0x11e2 <__mulsf3_pse+0x84>
    11ea:	98 3e       	cpi	r25, 0xE8	; 232
    11ec:	d4 f3       	brlt	.-12     	; 0x11e2 <__mulsf3_pse+0x84>
    11ee:	86 95       	lsr	r24
    11f0:	77 95       	ror	r23
    11f2:	67 95       	ror	r22
    11f4:	b7 95       	ror	r27
    11f6:	f7 95       	ror	r31
    11f8:	e7 95       	ror	r30
    11fa:	9f 5f       	subi	r25, 0xFF	; 255
    11fc:	c1 f7       	brne	.-16     	; 0x11ee <__mulsf3_pse+0x90>
    11fe:	fe 2b       	or	r31, r30
    1200:	88 0f       	add	r24, r24
    1202:	91 1d       	adc	r25, r1
    1204:	96 95       	lsr	r25
    1206:	87 95       	ror	r24
    1208:	97 f9       	bld	r25, 7
    120a:	08 95       	ret

0000120c <dtostrf>:
    120c:	ef 92       	push	r14
    120e:	0f 93       	push	r16
    1210:	1f 93       	push	r17
    1212:	cf 93       	push	r28
    1214:	df 93       	push	r29
    1216:	e8 01       	movw	r28, r16
    1218:	47 fd       	sbrc	r20, 7
    121a:	02 c0       	rjmp	.+4      	; 0x1220 <dtostrf+0x14>
    121c:	34 e0       	ldi	r19, 0x04	; 4
    121e:	01 c0       	rjmp	.+2      	; 0x1222 <dtostrf+0x16>
    1220:	34 e1       	ldi	r19, 0x14	; 20
    1222:	04 2e       	mov	r0, r20
    1224:	00 0c       	add	r0, r0
    1226:	55 0b       	sbc	r21, r21
    1228:	57 ff       	sbrs	r21, 7
    122a:	03 c0       	rjmp	.+6      	; 0x1232 <dtostrf+0x26>
    122c:	51 95       	neg	r21
    122e:	41 95       	neg	r20
    1230:	51 09       	sbc	r21, r1
    1232:	e3 2e       	mov	r14, r19
    1234:	02 2f       	mov	r16, r18
    1236:	24 2f       	mov	r18, r20
    1238:	ae 01       	movw	r20, r28
    123a:	0e 94 4c 09 	call	0x1298	; 0x1298 <dtoa_prf>
    123e:	ce 01       	movw	r24, r28
    1240:	df 91       	pop	r29
    1242:	cf 91       	pop	r28
    1244:	1f 91       	pop	r17
    1246:	0f 91       	pop	r16
    1248:	ef 90       	pop	r14
    124a:	08 95       	ret

0000124c <atoi>:
    124c:	fc 01       	movw	r30, r24
    124e:	88 27       	eor	r24, r24
    1250:	99 27       	eor	r25, r25
    1252:	e8 94       	clt
    1254:	21 91       	ld	r18, Z+
    1256:	20 32       	cpi	r18, 0x20	; 32
    1258:	e9 f3       	breq	.-6      	; 0x1254 <atoi+0x8>
    125a:	29 30       	cpi	r18, 0x09	; 9
    125c:	10 f0       	brcs	.+4      	; 0x1262 <atoi+0x16>
    125e:	2e 30       	cpi	r18, 0x0E	; 14
    1260:	c8 f3       	brcs	.-14     	; 0x1254 <atoi+0x8>
    1262:	2b 32       	cpi	r18, 0x2B	; 43
    1264:	41 f0       	breq	.+16     	; 0x1276 <atoi+0x2a>
    1266:	2d 32       	cpi	r18, 0x2D	; 45
    1268:	39 f4       	brne	.+14     	; 0x1278 <atoi+0x2c>
    126a:	68 94       	set
    126c:	04 c0       	rjmp	.+8      	; 0x1276 <atoi+0x2a>
    126e:	0e 94 44 09 	call	0x1288	; 0x1288 <__mulhi_const_10>
    1272:	82 0f       	add	r24, r18
    1274:	91 1d       	adc	r25, r1
    1276:	21 91       	ld	r18, Z+
    1278:	20 53       	subi	r18, 0x30	; 48
    127a:	2a 30       	cpi	r18, 0x0A	; 10
    127c:	c0 f3       	brcs	.-16     	; 0x126e <atoi+0x22>
    127e:	1e f4       	brtc	.+6      	; 0x1286 <atoi+0x3a>
    1280:	90 95       	com	r25
    1282:	81 95       	neg	r24
    1284:	9f 4f       	sbci	r25, 0xFF	; 255
    1286:	08 95       	ret

00001288 <__mulhi_const_10>:
    1288:	7a e0       	ldi	r23, 0x0A	; 10
    128a:	97 9f       	mul	r25, r23
    128c:	90 2d       	mov	r25, r0
    128e:	87 9f       	mul	r24, r23
    1290:	80 2d       	mov	r24, r0
    1292:	91 0d       	add	r25, r1
    1294:	11 24       	eor	r1, r1
    1296:	08 95       	ret

00001298 <dtoa_prf>:
    1298:	a9 e0       	ldi	r26, 0x09	; 9
    129a:	b0 e0       	ldi	r27, 0x00	; 0
    129c:	e2 e5       	ldi	r30, 0x52	; 82
    129e:	f9 e0       	ldi	r31, 0x09	; 9
    12a0:	0c 94 84 0b 	jmp	0x1708	; 0x1708 <__prologue_saves__+0xc>
    12a4:	6a 01       	movw	r12, r20
    12a6:	12 2f       	mov	r17, r18
    12a8:	b0 2e       	mov	r11, r16
    12aa:	2b e3       	ldi	r18, 0x3B	; 59
    12ac:	20 17       	cp	r18, r16
    12ae:	20 f0       	brcs	.+8      	; 0x12b8 <dtoa_prf+0x20>
    12b0:	ff 24       	eor	r15, r15
    12b2:	f3 94       	inc	r15
    12b4:	f0 0e       	add	r15, r16
    12b6:	02 c0       	rjmp	.+4      	; 0x12bc <dtoa_prf+0x24>
    12b8:	2c e3       	ldi	r18, 0x3C	; 60
    12ba:	f2 2e       	mov	r15, r18
    12bc:	0f 2d       	mov	r16, r15
    12be:	27 e0       	ldi	r18, 0x07	; 7
    12c0:	ae 01       	movw	r20, r28
    12c2:	4f 5f       	subi	r20, 0xFF	; 255
    12c4:	5f 4f       	sbci	r21, 0xFF	; 255
    12c6:	0e 94 a6 0a 	call	0x154c	; 0x154c <__ftoa_engine>
    12ca:	bc 01       	movw	r22, r24
    12cc:	49 81       	ldd	r20, Y+1	; 0x01
    12ce:	84 2f       	mov	r24, r20
    12d0:	89 70       	andi	r24, 0x09	; 9
    12d2:	81 30       	cpi	r24, 0x01	; 1
    12d4:	31 f0       	breq	.+12     	; 0x12e2 <dtoa_prf+0x4a>
    12d6:	e1 fc       	sbrc	r14, 1
    12d8:	06 c0       	rjmp	.+12     	; 0x12e6 <dtoa_prf+0x4e>
    12da:	e0 fe       	sbrs	r14, 0
    12dc:	06 c0       	rjmp	.+12     	; 0x12ea <dtoa_prf+0x52>
    12de:	90 e2       	ldi	r25, 0x20	; 32
    12e0:	05 c0       	rjmp	.+10     	; 0x12ec <dtoa_prf+0x54>
    12e2:	9d e2       	ldi	r25, 0x2D	; 45
    12e4:	03 c0       	rjmp	.+6      	; 0x12ec <dtoa_prf+0x54>
    12e6:	9b e2       	ldi	r25, 0x2B	; 43
    12e8:	01 c0       	rjmp	.+2      	; 0x12ec <dtoa_prf+0x54>
    12ea:	90 e0       	ldi	r25, 0x00	; 0
    12ec:	5e 2d       	mov	r21, r14
    12ee:	50 71       	andi	r21, 0x10	; 16
    12f0:	43 ff       	sbrs	r20, 3
    12f2:	3c c0       	rjmp	.+120    	; 0x136c <dtoa_prf+0xd4>
    12f4:	91 11       	cpse	r25, r1
    12f6:	02 c0       	rjmp	.+4      	; 0x12fc <dtoa_prf+0x64>
    12f8:	83 e0       	ldi	r24, 0x03	; 3
    12fa:	01 c0       	rjmp	.+2      	; 0x12fe <dtoa_prf+0x66>
    12fc:	84 e0       	ldi	r24, 0x04	; 4
    12fe:	81 17       	cp	r24, r17
    1300:	18 f4       	brcc	.+6      	; 0x1308 <dtoa_prf+0x70>
    1302:	21 2f       	mov	r18, r17
    1304:	28 1b       	sub	r18, r24
    1306:	01 c0       	rjmp	.+2      	; 0x130a <dtoa_prf+0x72>
    1308:	20 e0       	ldi	r18, 0x00	; 0
    130a:	51 11       	cpse	r21, r1
    130c:	0b c0       	rjmp	.+22     	; 0x1324 <dtoa_prf+0x8c>
    130e:	f6 01       	movw	r30, r12
    1310:	82 2f       	mov	r24, r18
    1312:	30 e2       	ldi	r19, 0x20	; 32
    1314:	88 23       	and	r24, r24
    1316:	19 f0       	breq	.+6      	; 0x131e <dtoa_prf+0x86>
    1318:	31 93       	st	Z+, r19
    131a:	81 50       	subi	r24, 0x01	; 1
    131c:	fb cf       	rjmp	.-10     	; 0x1314 <dtoa_prf+0x7c>
    131e:	c2 0e       	add	r12, r18
    1320:	d1 1c       	adc	r13, r1
    1322:	20 e0       	ldi	r18, 0x00	; 0
    1324:	99 23       	and	r25, r25
    1326:	29 f0       	breq	.+10     	; 0x1332 <dtoa_prf+0x9a>
    1328:	d6 01       	movw	r26, r12
    132a:	9c 93       	st	X, r25
    132c:	f6 01       	movw	r30, r12
    132e:	31 96       	adiw	r30, 0x01	; 1
    1330:	6f 01       	movw	r12, r30
    1332:	c6 01       	movw	r24, r12
    1334:	03 96       	adiw	r24, 0x03	; 3
    1336:	e2 fe       	sbrs	r14, 2
    1338:	0a c0       	rjmp	.+20     	; 0x134e <dtoa_prf+0xb6>
    133a:	3e e4       	ldi	r19, 0x4E	; 78
    133c:	d6 01       	movw	r26, r12
    133e:	3c 93       	st	X, r19
    1340:	41 e4       	ldi	r20, 0x41	; 65
    1342:	11 96       	adiw	r26, 0x01	; 1
    1344:	4c 93       	st	X, r20
    1346:	11 97       	sbiw	r26, 0x01	; 1
    1348:	12 96       	adiw	r26, 0x02	; 2
    134a:	3c 93       	st	X, r19
    134c:	06 c0       	rjmp	.+12     	; 0x135a <dtoa_prf+0xc2>
    134e:	3e e6       	ldi	r19, 0x6E	; 110
    1350:	f6 01       	movw	r30, r12
    1352:	30 83       	st	Z, r19
    1354:	41 e6       	ldi	r20, 0x61	; 97
    1356:	41 83       	std	Z+1, r20	; 0x01
    1358:	32 83       	std	Z+2, r19	; 0x02
    135a:	fc 01       	movw	r30, r24
    135c:	32 2f       	mov	r19, r18
    135e:	40 e2       	ldi	r20, 0x20	; 32
    1360:	33 23       	and	r19, r19
    1362:	09 f4       	brne	.+2      	; 0x1366 <dtoa_prf+0xce>
    1364:	42 c0       	rjmp	.+132    	; 0x13ea <dtoa_prf+0x152>
    1366:	41 93       	st	Z+, r20
    1368:	31 50       	subi	r19, 0x01	; 1
    136a:	fa cf       	rjmp	.-12     	; 0x1360 <dtoa_prf+0xc8>
    136c:	42 ff       	sbrs	r20, 2
    136e:	44 c0       	rjmp	.+136    	; 0x13f8 <dtoa_prf+0x160>
    1370:	91 11       	cpse	r25, r1
    1372:	02 c0       	rjmp	.+4      	; 0x1378 <dtoa_prf+0xe0>
    1374:	83 e0       	ldi	r24, 0x03	; 3
    1376:	01 c0       	rjmp	.+2      	; 0x137a <dtoa_prf+0xe2>
    1378:	84 e0       	ldi	r24, 0x04	; 4
    137a:	81 17       	cp	r24, r17
    137c:	18 f4       	brcc	.+6      	; 0x1384 <dtoa_prf+0xec>
    137e:	21 2f       	mov	r18, r17
    1380:	28 1b       	sub	r18, r24
    1382:	01 c0       	rjmp	.+2      	; 0x1386 <dtoa_prf+0xee>
    1384:	20 e0       	ldi	r18, 0x00	; 0
    1386:	51 11       	cpse	r21, r1
    1388:	0b c0       	rjmp	.+22     	; 0x13a0 <dtoa_prf+0x108>
    138a:	f6 01       	movw	r30, r12
    138c:	82 2f       	mov	r24, r18
    138e:	30 e2       	ldi	r19, 0x20	; 32
    1390:	88 23       	and	r24, r24
    1392:	19 f0       	breq	.+6      	; 0x139a <dtoa_prf+0x102>
    1394:	31 93       	st	Z+, r19
    1396:	81 50       	subi	r24, 0x01	; 1
    1398:	fb cf       	rjmp	.-10     	; 0x1390 <dtoa_prf+0xf8>
    139a:	c2 0e       	add	r12, r18
    139c:	d1 1c       	adc	r13, r1
    139e:	20 e0       	ldi	r18, 0x00	; 0
    13a0:	99 23       	and	r25, r25
    13a2:	29 f0       	breq	.+10     	; 0x13ae <dtoa_prf+0x116>
    13a4:	d6 01       	movw	r26, r12
    13a6:	9c 93       	st	X, r25
    13a8:	f6 01       	movw	r30, r12
    13aa:	31 96       	adiw	r30, 0x01	; 1
    13ac:	6f 01       	movw	r12, r30
    13ae:	c6 01       	movw	r24, r12
    13b0:	03 96       	adiw	r24, 0x03	; 3
    13b2:	e2 fe       	sbrs	r14, 2
    13b4:	0b c0       	rjmp	.+22     	; 0x13cc <dtoa_prf+0x134>
    13b6:	39 e4       	ldi	r19, 0x49	; 73
    13b8:	d6 01       	movw	r26, r12
    13ba:	3c 93       	st	X, r19
    13bc:	3e e4       	ldi	r19, 0x4E	; 78
    13be:	11 96       	adiw	r26, 0x01	; 1
    13c0:	3c 93       	st	X, r19
    13c2:	11 97       	sbiw	r26, 0x01	; 1
    13c4:	36 e4       	ldi	r19, 0x46	; 70
    13c6:	12 96       	adiw	r26, 0x02	; 2
    13c8:	3c 93       	st	X, r19
    13ca:	07 c0       	rjmp	.+14     	; 0x13da <dtoa_prf+0x142>
    13cc:	39 e6       	ldi	r19, 0x69	; 105
    13ce:	f6 01       	movw	r30, r12
    13d0:	30 83       	st	Z, r19
    13d2:	3e e6       	ldi	r19, 0x6E	; 110
    13d4:	31 83       	std	Z+1, r19	; 0x01
    13d6:	36 e6       	ldi	r19, 0x66	; 102
    13d8:	32 83       	std	Z+2, r19	; 0x02
    13da:	fc 01       	movw	r30, r24
    13dc:	32 2f       	mov	r19, r18
    13de:	40 e2       	ldi	r20, 0x20	; 32
    13e0:	33 23       	and	r19, r19
    13e2:	19 f0       	breq	.+6      	; 0x13ea <dtoa_prf+0x152>
    13e4:	41 93       	st	Z+, r20
    13e6:	31 50       	subi	r19, 0x01	; 1
    13e8:	fb cf       	rjmp	.-10     	; 0x13e0 <dtoa_prf+0x148>
    13ea:	fc 01       	movw	r30, r24
    13ec:	e2 0f       	add	r30, r18
    13ee:	f1 1d       	adc	r31, r1
    13f0:	10 82       	st	Z, r1
    13f2:	8e ef       	ldi	r24, 0xFE	; 254
    13f4:	9f ef       	ldi	r25, 0xFF	; 255
    13f6:	a6 c0       	rjmp	.+332    	; 0x1544 <dtoa_prf+0x2ac>
    13f8:	21 e0       	ldi	r18, 0x01	; 1
    13fa:	30 e0       	ldi	r19, 0x00	; 0
    13fc:	91 11       	cpse	r25, r1
    13fe:	02 c0       	rjmp	.+4      	; 0x1404 <dtoa_prf+0x16c>
    1400:	20 e0       	ldi	r18, 0x00	; 0
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	16 16       	cp	r1, r22
    1406:	17 06       	cpc	r1, r23
    1408:	1c f4       	brge	.+6      	; 0x1410 <dtoa_prf+0x178>
    140a:	fb 01       	movw	r30, r22
    140c:	31 96       	adiw	r30, 0x01	; 1
    140e:	02 c0       	rjmp	.+4      	; 0x1414 <dtoa_prf+0x17c>
    1410:	e1 e0       	ldi	r30, 0x01	; 1
    1412:	f0 e0       	ldi	r31, 0x00	; 0
    1414:	2e 0f       	add	r18, r30
    1416:	3f 1f       	adc	r19, r31
    1418:	bb 20       	and	r11, r11
    141a:	21 f0       	breq	.+8      	; 0x1424 <dtoa_prf+0x18c>
    141c:	eb 2d       	mov	r30, r11
    141e:	f0 e0       	ldi	r31, 0x00	; 0
    1420:	31 96       	adiw	r30, 0x01	; 1
    1422:	02 c0       	rjmp	.+4      	; 0x1428 <dtoa_prf+0x190>
    1424:	e0 e0       	ldi	r30, 0x00	; 0
    1426:	f0 e0       	ldi	r31, 0x00	; 0
    1428:	2e 0f       	add	r18, r30
    142a:	3f 1f       	adc	r19, r31
    142c:	e1 2f       	mov	r30, r17
    142e:	f0 e0       	ldi	r31, 0x00	; 0
    1430:	2e 17       	cp	r18, r30
    1432:	3f 07       	cpc	r19, r31
    1434:	1c f4       	brge	.+6      	; 0x143c <dtoa_prf+0x1a4>
    1436:	12 1b       	sub	r17, r18
    1438:	21 2f       	mov	r18, r17
    143a:	01 c0       	rjmp	.+2      	; 0x143e <dtoa_prf+0x1a6>
    143c:	20 e0       	ldi	r18, 0x00	; 0
    143e:	8e 2d       	mov	r24, r14
    1440:	88 71       	andi	r24, 0x18	; 24
    1442:	59 f4       	brne	.+22     	; 0x145a <dtoa_prf+0x1c2>
    1444:	f6 01       	movw	r30, r12
    1446:	82 2f       	mov	r24, r18
    1448:	30 e2       	ldi	r19, 0x20	; 32
    144a:	88 23       	and	r24, r24
    144c:	19 f0       	breq	.+6      	; 0x1454 <dtoa_prf+0x1bc>
    144e:	31 93       	st	Z+, r19
    1450:	81 50       	subi	r24, 0x01	; 1
    1452:	fb cf       	rjmp	.-10     	; 0x144a <dtoa_prf+0x1b2>
    1454:	c2 0e       	add	r12, r18
    1456:	d1 1c       	adc	r13, r1
    1458:	20 e0       	ldi	r18, 0x00	; 0
    145a:	99 23       	and	r25, r25
    145c:	29 f0       	breq	.+10     	; 0x1468 <dtoa_prf+0x1d0>
    145e:	d6 01       	movw	r26, r12
    1460:	9c 93       	st	X, r25
    1462:	f6 01       	movw	r30, r12
    1464:	31 96       	adiw	r30, 0x01	; 1
    1466:	6f 01       	movw	r12, r30
    1468:	51 11       	cpse	r21, r1
    146a:	0b c0       	rjmp	.+22     	; 0x1482 <dtoa_prf+0x1ea>
    146c:	f6 01       	movw	r30, r12
    146e:	82 2f       	mov	r24, r18
    1470:	90 e3       	ldi	r25, 0x30	; 48
    1472:	88 23       	and	r24, r24
    1474:	19 f0       	breq	.+6      	; 0x147c <dtoa_prf+0x1e4>
    1476:	91 93       	st	Z+, r25
    1478:	81 50       	subi	r24, 0x01	; 1
    147a:	fb cf       	rjmp	.-10     	; 0x1472 <dtoa_prf+0x1da>
    147c:	c2 0e       	add	r12, r18
    147e:	d1 1c       	adc	r13, r1
    1480:	20 e0       	ldi	r18, 0x00	; 0
    1482:	0f 2d       	mov	r16, r15
    1484:	06 0f       	add	r16, r22
    1486:	9a 81       	ldd	r25, Y+2	; 0x02
    1488:	34 2f       	mov	r19, r20
    148a:	30 71       	andi	r19, 0x10	; 16
    148c:	44 ff       	sbrs	r20, 4
    148e:	03 c0       	rjmp	.+6      	; 0x1496 <dtoa_prf+0x1fe>
    1490:	91 33       	cpi	r25, 0x31	; 49
    1492:	09 f4       	brne	.+2      	; 0x1496 <dtoa_prf+0x1fe>
    1494:	01 50       	subi	r16, 0x01	; 1
    1496:	10 16       	cp	r1, r16
    1498:	24 f4       	brge	.+8      	; 0x14a2 <dtoa_prf+0x20a>
    149a:	09 30       	cpi	r16, 0x09	; 9
    149c:	18 f0       	brcs	.+6      	; 0x14a4 <dtoa_prf+0x20c>
    149e:	08 e0       	ldi	r16, 0x08	; 8
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <dtoa_prf+0x20c>
    14a2:	01 e0       	ldi	r16, 0x01	; 1
    14a4:	ab 01       	movw	r20, r22
    14a6:	77 ff       	sbrs	r23, 7
    14a8:	02 c0       	rjmp	.+4      	; 0x14ae <dtoa_prf+0x216>
    14aa:	40 e0       	ldi	r20, 0x00	; 0
    14ac:	50 e0       	ldi	r21, 0x00	; 0
    14ae:	fb 01       	movw	r30, r22
    14b0:	e4 1b       	sub	r30, r20
    14b2:	f5 0b       	sbc	r31, r21
    14b4:	a1 e0       	ldi	r26, 0x01	; 1
    14b6:	b0 e0       	ldi	r27, 0x00	; 0
    14b8:	ac 0f       	add	r26, r28
    14ba:	bd 1f       	adc	r27, r29
    14bc:	ea 0f       	add	r30, r26
    14be:	fb 1f       	adc	r31, r27
    14c0:	8e e2       	ldi	r24, 0x2E	; 46
    14c2:	a8 2e       	mov	r10, r24
    14c4:	4b 01       	movw	r8, r22
    14c6:	80 1a       	sub	r8, r16
    14c8:	91 08       	sbc	r9, r1
    14ca:	0b 2d       	mov	r16, r11
    14cc:	10 e0       	ldi	r17, 0x00	; 0
    14ce:	11 95       	neg	r17
    14d0:	01 95       	neg	r16
    14d2:	11 09       	sbc	r17, r1
    14d4:	4f 3f       	cpi	r20, 0xFF	; 255
    14d6:	bf ef       	ldi	r27, 0xFF	; 255
    14d8:	5b 07       	cpc	r21, r27
    14da:	21 f4       	brne	.+8      	; 0x14e4 <dtoa_prf+0x24c>
    14dc:	d6 01       	movw	r26, r12
    14de:	ac 92       	st	X, r10
    14e0:	11 96       	adiw	r26, 0x01	; 1
    14e2:	6d 01       	movw	r12, r26
    14e4:	64 17       	cp	r22, r20
    14e6:	75 07       	cpc	r23, r21
    14e8:	2c f0       	brlt	.+10     	; 0x14f4 <dtoa_prf+0x25c>
    14ea:	84 16       	cp	r8, r20
    14ec:	95 06       	cpc	r9, r21
    14ee:	14 f4       	brge	.+4      	; 0x14f4 <dtoa_prf+0x25c>
    14f0:	81 81       	ldd	r24, Z+1	; 0x01
    14f2:	01 c0       	rjmp	.+2      	; 0x14f6 <dtoa_prf+0x25e>
    14f4:	80 e3       	ldi	r24, 0x30	; 48
    14f6:	41 50       	subi	r20, 0x01	; 1
    14f8:	51 09       	sbc	r21, r1
    14fa:	31 96       	adiw	r30, 0x01	; 1
    14fc:	d6 01       	movw	r26, r12
    14fe:	11 96       	adiw	r26, 0x01	; 1
    1500:	7d 01       	movw	r14, r26
    1502:	40 17       	cp	r20, r16
    1504:	51 07       	cpc	r21, r17
    1506:	24 f0       	brlt	.+8      	; 0x1510 <dtoa_prf+0x278>
    1508:	d6 01       	movw	r26, r12
    150a:	8c 93       	st	X, r24
    150c:	67 01       	movw	r12, r14
    150e:	e2 cf       	rjmp	.-60     	; 0x14d4 <dtoa_prf+0x23c>
    1510:	64 17       	cp	r22, r20
    1512:	75 07       	cpc	r23, r21
    1514:	39 f4       	brne	.+14     	; 0x1524 <dtoa_prf+0x28c>
    1516:	96 33       	cpi	r25, 0x36	; 54
    1518:	20 f4       	brcc	.+8      	; 0x1522 <dtoa_prf+0x28a>
    151a:	95 33       	cpi	r25, 0x35	; 53
    151c:	19 f4       	brne	.+6      	; 0x1524 <dtoa_prf+0x28c>
    151e:	31 11       	cpse	r19, r1
    1520:	01 c0       	rjmp	.+2      	; 0x1524 <dtoa_prf+0x28c>
    1522:	81 e3       	ldi	r24, 0x31	; 49
    1524:	f6 01       	movw	r30, r12
    1526:	80 83       	st	Z, r24
    1528:	f7 01       	movw	r30, r14
    152a:	82 2f       	mov	r24, r18
    152c:	90 e2       	ldi	r25, 0x20	; 32
    152e:	88 23       	and	r24, r24
    1530:	19 f0       	breq	.+6      	; 0x1538 <dtoa_prf+0x2a0>
    1532:	91 93       	st	Z+, r25
    1534:	81 50       	subi	r24, 0x01	; 1
    1536:	fb cf       	rjmp	.-10     	; 0x152e <dtoa_prf+0x296>
    1538:	f7 01       	movw	r30, r14
    153a:	e2 0f       	add	r30, r18
    153c:	f1 1d       	adc	r31, r1
    153e:	10 82       	st	Z, r1
    1540:	80 e0       	ldi	r24, 0x00	; 0
    1542:	90 e0       	ldi	r25, 0x00	; 0
    1544:	29 96       	adiw	r28, 0x09	; 9
    1546:	ec e0       	ldi	r30, 0x0C	; 12
    1548:	0c 94 a0 0b 	jmp	0x1740	; 0x1740 <__epilogue_restores__+0xc>

0000154c <__ftoa_engine>:
    154c:	28 30       	cpi	r18, 0x08	; 8
    154e:	08 f0       	brcs	.+2      	; 0x1552 <__ftoa_engine+0x6>
    1550:	27 e0       	ldi	r18, 0x07	; 7
    1552:	33 27       	eor	r19, r19
    1554:	da 01       	movw	r26, r20
    1556:	99 0f       	add	r25, r25
    1558:	31 1d       	adc	r19, r1
    155a:	87 fd       	sbrc	r24, 7
    155c:	91 60       	ori	r25, 0x01	; 1
    155e:	00 96       	adiw	r24, 0x00	; 0
    1560:	61 05       	cpc	r22, r1
    1562:	71 05       	cpc	r23, r1
    1564:	39 f4       	brne	.+14     	; 0x1574 <__ftoa_engine+0x28>
    1566:	32 60       	ori	r19, 0x02	; 2
    1568:	2e 5f       	subi	r18, 0xFE	; 254
    156a:	3d 93       	st	X+, r19
    156c:	30 e3       	ldi	r19, 0x30	; 48
    156e:	2a 95       	dec	r18
    1570:	e1 f7       	brne	.-8      	; 0x156a <__ftoa_engine+0x1e>
    1572:	08 95       	ret
    1574:	9f 3f       	cpi	r25, 0xFF	; 255
    1576:	30 f0       	brcs	.+12     	; 0x1584 <__ftoa_engine+0x38>
    1578:	80 38       	cpi	r24, 0x80	; 128
    157a:	71 05       	cpc	r23, r1
    157c:	61 05       	cpc	r22, r1
    157e:	09 f0       	breq	.+2      	; 0x1582 <__ftoa_engine+0x36>
    1580:	3c 5f       	subi	r19, 0xFC	; 252
    1582:	3c 5f       	subi	r19, 0xFC	; 252
    1584:	3d 93       	st	X+, r19
    1586:	91 30       	cpi	r25, 0x01	; 1
    1588:	08 f0       	brcs	.+2      	; 0x158c <__ftoa_engine+0x40>
    158a:	80 68       	ori	r24, 0x80	; 128
    158c:	91 1d       	adc	r25, r1
    158e:	df 93       	push	r29
    1590:	cf 93       	push	r28
    1592:	1f 93       	push	r17
    1594:	0f 93       	push	r16
    1596:	ff 92       	push	r15
    1598:	ef 92       	push	r14
    159a:	19 2f       	mov	r17, r25
    159c:	98 7f       	andi	r25, 0xF8	; 248
    159e:	96 95       	lsr	r25
    15a0:	e9 2f       	mov	r30, r25
    15a2:	96 95       	lsr	r25
    15a4:	96 95       	lsr	r25
    15a6:	e9 0f       	add	r30, r25
    15a8:	ff 27       	eor	r31, r31
    15aa:	e2 55       	subi	r30, 0x52	; 82
    15ac:	ff 4f       	sbci	r31, 0xFF	; 255
    15ae:	99 27       	eor	r25, r25
    15b0:	33 27       	eor	r19, r19
    15b2:	ee 24       	eor	r14, r14
    15b4:	ff 24       	eor	r15, r15
    15b6:	a7 01       	movw	r20, r14
    15b8:	e7 01       	movw	r28, r14
    15ba:	05 90       	lpm	r0, Z+
    15bc:	08 94       	sec
    15be:	07 94       	ror	r0
    15c0:	28 f4       	brcc	.+10     	; 0x15cc <__ftoa_engine+0x80>
    15c2:	36 0f       	add	r19, r22
    15c4:	e7 1e       	adc	r14, r23
    15c6:	f8 1e       	adc	r15, r24
    15c8:	49 1f       	adc	r20, r25
    15ca:	51 1d       	adc	r21, r1
    15cc:	66 0f       	add	r22, r22
    15ce:	77 1f       	adc	r23, r23
    15d0:	88 1f       	adc	r24, r24
    15d2:	99 1f       	adc	r25, r25
    15d4:	06 94       	lsr	r0
    15d6:	a1 f7       	brne	.-24     	; 0x15c0 <__ftoa_engine+0x74>
    15d8:	05 90       	lpm	r0, Z+
    15da:	07 94       	ror	r0
    15dc:	28 f4       	brcc	.+10     	; 0x15e8 <__ftoa_engine+0x9c>
    15de:	e7 0e       	add	r14, r23
    15e0:	f8 1e       	adc	r15, r24
    15e2:	49 1f       	adc	r20, r25
    15e4:	56 1f       	adc	r21, r22
    15e6:	c1 1d       	adc	r28, r1
    15e8:	77 0f       	add	r23, r23
    15ea:	88 1f       	adc	r24, r24
    15ec:	99 1f       	adc	r25, r25
    15ee:	66 1f       	adc	r22, r22
    15f0:	06 94       	lsr	r0
    15f2:	a1 f7       	brne	.-24     	; 0x15dc <__ftoa_engine+0x90>
    15f4:	05 90       	lpm	r0, Z+
    15f6:	07 94       	ror	r0
    15f8:	28 f4       	brcc	.+10     	; 0x1604 <__ftoa_engine+0xb8>
    15fa:	f8 0e       	add	r15, r24
    15fc:	49 1f       	adc	r20, r25
    15fe:	56 1f       	adc	r21, r22
    1600:	c7 1f       	adc	r28, r23
    1602:	d1 1d       	adc	r29, r1
    1604:	88 0f       	add	r24, r24
    1606:	99 1f       	adc	r25, r25
    1608:	66 1f       	adc	r22, r22
    160a:	77 1f       	adc	r23, r23
    160c:	06 94       	lsr	r0
    160e:	a1 f7       	brne	.-24     	; 0x15f8 <__ftoa_engine+0xac>
    1610:	05 90       	lpm	r0, Z+
    1612:	07 94       	ror	r0
    1614:	20 f4       	brcc	.+8      	; 0x161e <__ftoa_engine+0xd2>
    1616:	49 0f       	add	r20, r25
    1618:	56 1f       	adc	r21, r22
    161a:	c7 1f       	adc	r28, r23
    161c:	d8 1f       	adc	r29, r24
    161e:	99 0f       	add	r25, r25
    1620:	66 1f       	adc	r22, r22
    1622:	77 1f       	adc	r23, r23
    1624:	88 1f       	adc	r24, r24
    1626:	06 94       	lsr	r0
    1628:	a9 f7       	brne	.-22     	; 0x1614 <__ftoa_engine+0xc8>
    162a:	84 91       	lpm	r24, Z
    162c:	10 95       	com	r17
    162e:	17 70       	andi	r17, 0x07	; 7
    1630:	41 f0       	breq	.+16     	; 0x1642 <__ftoa_engine+0xf6>
    1632:	d6 95       	lsr	r29
    1634:	c7 95       	ror	r28
    1636:	57 95       	ror	r21
    1638:	47 95       	ror	r20
    163a:	f7 94       	ror	r15
    163c:	e7 94       	ror	r14
    163e:	1a 95       	dec	r17
    1640:	c1 f7       	brne	.-16     	; 0x1632 <__ftoa_engine+0xe6>
    1642:	e4 e5       	ldi	r30, 0x54	; 84
    1644:	f0 e0       	ldi	r31, 0x00	; 0
    1646:	68 94       	set
    1648:	15 90       	lpm	r1, Z+
    164a:	15 91       	lpm	r17, Z+
    164c:	35 91       	lpm	r19, Z+
    164e:	65 91       	lpm	r22, Z+
    1650:	95 91       	lpm	r25, Z+
    1652:	05 90       	lpm	r0, Z+
    1654:	7f e2       	ldi	r23, 0x2F	; 47
    1656:	73 95       	inc	r23
    1658:	e1 18       	sub	r14, r1
    165a:	f1 0a       	sbc	r15, r17
    165c:	43 0b       	sbc	r20, r19
    165e:	56 0b       	sbc	r21, r22
    1660:	c9 0b       	sbc	r28, r25
    1662:	d0 09       	sbc	r29, r0
    1664:	c0 f7       	brcc	.-16     	; 0x1656 <__ftoa_engine+0x10a>
    1666:	e1 0c       	add	r14, r1
    1668:	f1 1e       	adc	r15, r17
    166a:	43 1f       	adc	r20, r19
    166c:	56 1f       	adc	r21, r22
    166e:	c9 1f       	adc	r28, r25
    1670:	d0 1d       	adc	r29, r0
    1672:	7e f4       	brtc	.+30     	; 0x1692 <__ftoa_engine+0x146>
    1674:	70 33       	cpi	r23, 0x30	; 48
    1676:	11 f4       	brne	.+4      	; 0x167c <__ftoa_engine+0x130>
    1678:	8a 95       	dec	r24
    167a:	e6 cf       	rjmp	.-52     	; 0x1648 <__ftoa_engine+0xfc>
    167c:	e8 94       	clt
    167e:	01 50       	subi	r16, 0x01	; 1
    1680:	30 f0       	brcs	.+12     	; 0x168e <__ftoa_engine+0x142>
    1682:	08 0f       	add	r16, r24
    1684:	0a f4       	brpl	.+2      	; 0x1688 <__ftoa_engine+0x13c>
    1686:	00 27       	eor	r16, r16
    1688:	02 17       	cp	r16, r18
    168a:	08 f4       	brcc	.+2      	; 0x168e <__ftoa_engine+0x142>
    168c:	20 2f       	mov	r18, r16
    168e:	23 95       	inc	r18
    1690:	02 2f       	mov	r16, r18
    1692:	7a 33       	cpi	r23, 0x3A	; 58
    1694:	28 f0       	brcs	.+10     	; 0x16a0 <__ftoa_engine+0x154>
    1696:	79 e3       	ldi	r23, 0x39	; 57
    1698:	7d 93       	st	X+, r23
    169a:	2a 95       	dec	r18
    169c:	e9 f7       	brne	.-6      	; 0x1698 <__ftoa_engine+0x14c>
    169e:	10 c0       	rjmp	.+32     	; 0x16c0 <__ftoa_engine+0x174>
    16a0:	7d 93       	st	X+, r23
    16a2:	2a 95       	dec	r18
    16a4:	89 f6       	brne	.-94     	; 0x1648 <__ftoa_engine+0xfc>
    16a6:	06 94       	lsr	r0
    16a8:	97 95       	ror	r25
    16aa:	67 95       	ror	r22
    16ac:	37 95       	ror	r19
    16ae:	17 95       	ror	r17
    16b0:	17 94       	ror	r1
    16b2:	e1 18       	sub	r14, r1
    16b4:	f1 0a       	sbc	r15, r17
    16b6:	43 0b       	sbc	r20, r19
    16b8:	56 0b       	sbc	r21, r22
    16ba:	c9 0b       	sbc	r28, r25
    16bc:	d0 09       	sbc	r29, r0
    16be:	98 f0       	brcs	.+38     	; 0x16e6 <__ftoa_engine+0x19a>
    16c0:	23 95       	inc	r18
    16c2:	7e 91       	ld	r23, -X
    16c4:	73 95       	inc	r23
    16c6:	7a 33       	cpi	r23, 0x3A	; 58
    16c8:	08 f0       	brcs	.+2      	; 0x16cc <__ftoa_engine+0x180>
    16ca:	70 e3       	ldi	r23, 0x30	; 48
    16cc:	7c 93       	st	X, r23
    16ce:	20 13       	cpse	r18, r16
    16d0:	b8 f7       	brcc	.-18     	; 0x16c0 <__ftoa_engine+0x174>
    16d2:	7e 91       	ld	r23, -X
    16d4:	70 61       	ori	r23, 0x10	; 16
    16d6:	7d 93       	st	X+, r23
    16d8:	30 f0       	brcs	.+12     	; 0x16e6 <__ftoa_engine+0x19a>
    16da:	83 95       	inc	r24
    16dc:	71 e3       	ldi	r23, 0x31	; 49
    16de:	7d 93       	st	X+, r23
    16e0:	70 e3       	ldi	r23, 0x30	; 48
    16e2:	2a 95       	dec	r18
    16e4:	e1 f7       	brne	.-8      	; 0x16de <__ftoa_engine+0x192>
    16e6:	11 24       	eor	r1, r1
    16e8:	ef 90       	pop	r14
    16ea:	ff 90       	pop	r15
    16ec:	0f 91       	pop	r16
    16ee:	1f 91       	pop	r17
    16f0:	cf 91       	pop	r28
    16f2:	df 91       	pop	r29
    16f4:	99 27       	eor	r25, r25
    16f6:	87 fd       	sbrc	r24, 7
    16f8:	90 95       	com	r25
    16fa:	08 95       	ret

000016fc <__prologue_saves__>:
    16fc:	2f 92       	push	r2
    16fe:	3f 92       	push	r3
    1700:	4f 92       	push	r4
    1702:	5f 92       	push	r5
    1704:	6f 92       	push	r6
    1706:	7f 92       	push	r7
    1708:	8f 92       	push	r8
    170a:	9f 92       	push	r9
    170c:	af 92       	push	r10
    170e:	bf 92       	push	r11
    1710:	cf 92       	push	r12
    1712:	df 92       	push	r13
    1714:	ef 92       	push	r14
    1716:	ff 92       	push	r15
    1718:	0f 93       	push	r16
    171a:	1f 93       	push	r17
    171c:	cf 93       	push	r28
    171e:	df 93       	push	r29
    1720:	cd b7       	in	r28, 0x3d	; 61
    1722:	de b7       	in	r29, 0x3e	; 62
    1724:	ca 1b       	sub	r28, r26
    1726:	db 0b       	sbc	r29, r27
    1728:	0f b6       	in	r0, 0x3f	; 63
    172a:	f8 94       	cli
    172c:	de bf       	out	0x3e, r29	; 62
    172e:	0f be       	out	0x3f, r0	; 63
    1730:	cd bf       	out	0x3d, r28	; 61
    1732:	09 94       	ijmp

00001734 <__epilogue_restores__>:
    1734:	2a 88       	ldd	r2, Y+18	; 0x12
    1736:	39 88       	ldd	r3, Y+17	; 0x11
    1738:	48 88       	ldd	r4, Y+16	; 0x10
    173a:	5f 84       	ldd	r5, Y+15	; 0x0f
    173c:	6e 84       	ldd	r6, Y+14	; 0x0e
    173e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1740:	8c 84       	ldd	r8, Y+12	; 0x0c
    1742:	9b 84       	ldd	r9, Y+11	; 0x0b
    1744:	aa 84       	ldd	r10, Y+10	; 0x0a
    1746:	b9 84       	ldd	r11, Y+9	; 0x09
    1748:	c8 84       	ldd	r12, Y+8	; 0x08
    174a:	df 80       	ldd	r13, Y+7	; 0x07
    174c:	ee 80       	ldd	r14, Y+6	; 0x06
    174e:	fd 80       	ldd	r15, Y+5	; 0x05
    1750:	0c 81       	ldd	r16, Y+4	; 0x04
    1752:	1b 81       	ldd	r17, Y+3	; 0x03
    1754:	aa 81       	ldd	r26, Y+2	; 0x02
    1756:	b9 81       	ldd	r27, Y+1	; 0x01
    1758:	ce 0f       	add	r28, r30
    175a:	d1 1d       	adc	r29, r1
    175c:	0f b6       	in	r0, 0x3f	; 63
    175e:	f8 94       	cli
    1760:	de bf       	out	0x3e, r29	; 62
    1762:	0f be       	out	0x3f, r0	; 63
    1764:	cd bf       	out	0x3d, r28	; 61
    1766:	ed 01       	movw	r28, r26
    1768:	08 95       	ret

0000176a <_exit>:
    176a:	f8 94       	cli

0000176c <__stop_program>:
    176c:	ff cf       	rjmp	.-2      	; 0x176c <__stop_program>
